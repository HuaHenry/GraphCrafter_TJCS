{
  "version": 3,
  "sources": ["../../parseuri/index.js", "../../ms/index.js", "../../debug/src/common.js", "../../debug/src/browser.js", "../../socket.io-client/build/url.js", "../../has-cors/index.js", "../../engine.io-client/lib/globalThis.browser.js", "../../engine.io-client/lib/xmlhttprequest.js", "../../engine.io-parser/lib/commons.js", "../../engine.io-parser/lib/encodePacket.browser.js", "../../base64-arraybuffer/lib/base64-arraybuffer.js", "../../engine.io-parser/lib/decodePacket.browser.js", "../../engine.io-parser/lib/index.js", "../../component-emitter/index.js", "../../engine.io-client/lib/transport.js", "../../parseqs/index.js", "../../yeast/index.js", "../../engine.io-client/lib/transports/polling.js", "../../engine.io-client/lib/util.js", "../../engine.io-client/lib/transports/polling-xhr.js", "../../engine.io-client/lib/transports/polling-jsonp.js", "../../engine.io-client/lib/transports/websocket-constructor.browser.js", "../../engine.io-client/lib/transports/websocket.js", "../../engine.io-client/lib/transports/index.js", "../../engine.io-client/lib/socket.js", "../../engine.io-client/lib/index.js", "../../socket.io-parser/dist/is-binary.js", "../../socket.io-parser/dist/binary.js", "../../socket.io-parser/dist/index.js", "../../socket.io-client/build/on.js", "../../socket.io-client/build/socket.js", "../../backo2/index.js", "../../socket.io-client/build/manager.js", "../../socket.io-client/build/index.js", "../../socket.io-client/wrapper.mjs"],
  "sourcesContent": ["/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    uri.pathNames = pathNames(uri, uri['path']);\r\n    uri.queryKey = queryKey(uri, uri['query']);\r\n\r\n    return uri;\r\n};\r\n\r\nfunction pathNames(obj, path) {\r\n    var regx = /\\/{2,9}/g,\r\n        names = path.replace(regx, \"/\").split(\"/\");\r\n\r\n    if (path.substr(0, 1) == '/' || path.length === 0) {\r\n        names.splice(0, 1);\r\n    }\r\n    if (path.substr(path.length - 1, 1) == '/') {\r\n        names.splice(names.length - 1, 1);\r\n    }\r\n\r\n    return names;\r\n}\r\n\r\nfunction queryKey(uri, query) {\r\n    var data = {};\r\n\r\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\r\n        if ($1) {\r\n            data[$1] = $2;\r\n        }\r\n    });\r\n\r\n    return data;\r\n}\r\n", "/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar w = d * 7;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isFinite(val)) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'weeks':\r\n    case 'week':\r\n    case 'w':\r\n      return n * w;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (msAbs >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (msAbs >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (msAbs >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return plural(ms, msAbs, d, 'day');\r\n  }\r\n  if (msAbs >= h) {\r\n    return plural(ms, msAbs, h, 'hour');\r\n  }\r\n  if (msAbs >= m) {\r\n    return plural(ms, msAbs, m, 'minute');\r\n  }\r\n  if (msAbs >= s) {\r\n    return plural(ms, msAbs, s, 'second');\r\n  }\r\n  return ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, msAbs, n, name) {\r\n  var isPlural = msAbs >= n * 1.5;\r\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\r\n}\r\n", "\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n */\r\n\r\nfunction setup(env) {\r\n\tcreateDebug.debug = createDebug;\r\n\tcreateDebug.default = createDebug;\r\n\tcreateDebug.coerce = coerce;\r\n\tcreateDebug.disable = disable;\r\n\tcreateDebug.enable = enable;\r\n\tcreateDebug.enabled = enabled;\r\n\tcreateDebug.humanize = require('ms');\r\n\tcreateDebug.destroy = destroy;\r\n\r\n\tObject.keys(env).forEach(key => {\r\n\t\tcreateDebug[key] = env[key];\r\n\t});\r\n\r\n\t/**\r\n\t* The currently active debug mode names, and names to skip.\r\n\t*/\r\n\r\n\tcreateDebug.names = [];\r\n\tcreateDebug.skips = [];\r\n\r\n\t/**\r\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n\t*\r\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n\t*/\r\n\tcreateDebug.formatters = {};\r\n\r\n\t/**\r\n\t* Selects a color for a debug namespace\r\n\t* @param {String} namespace The namespace string for the debug instance to be colored\r\n\t* @return {Number|String} An ANSI color code for the given namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction selectColor(namespace) {\r\n\t\tlet hash = 0;\r\n\r\n\t\tfor (let i = 0; i < namespace.length; i++) {\r\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\r\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\r\n\t}\r\n\tcreateDebug.selectColor = selectColor;\r\n\r\n\t/**\r\n\t* Create a debugger with the given `namespace`.\r\n\t*\r\n\t* @param {String} namespace\r\n\t* @return {Function}\r\n\t* @api public\r\n\t*/\r\n\tfunction createDebug(namespace) {\r\n\t\tlet prevTime;\r\n\t\tlet enableOverride = null;\r\n\t\tlet namespacesCache;\r\n\t\tlet enabledCache;\r\n\r\n\t\tfunction debug(...args) {\r\n\t\t\t// Disabled?\r\n\t\t\tif (!debug.enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst self = debug;\r\n\r\n\t\t\t// Set `diff` timestamp\r\n\t\t\tconst curr = Number(new Date());\r\n\t\t\tconst ms = curr - (prevTime || curr);\r\n\t\t\tself.diff = ms;\r\n\t\t\tself.prev = prevTime;\r\n\t\t\tself.curr = curr;\r\n\t\t\tprevTime = curr;\r\n\r\n\t\t\targs[0] = createDebug.coerce(args[0]);\r\n\r\n\t\t\tif (typeof args[0] !== 'string') {\r\n\t\t\t\t// Anything else let's inspect with %O\r\n\t\t\t\targs.unshift('%O');\r\n\t\t\t}\r\n\r\n\t\t\t// Apply any `formatters` transformations\r\n\t\t\tlet index = 0;\r\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\r\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\r\n\t\t\t\tif (match === '%%') {\r\n\t\t\t\t\treturn '%';\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t\tconst formatter = createDebug.formatters[format];\r\n\t\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\t\tconst val = args[index];\r\n\t\t\t\t\tmatch = formatter.call(self, val);\r\n\r\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\r\n\t\t\t\t\targs.splice(index, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t\treturn match;\r\n\t\t\t});\r\n\r\n\t\t\t// Apply env-specific formatting (colors, etc.)\r\n\t\t\tcreateDebug.formatArgs.call(self, args);\r\n\r\n\t\t\tconst logFn = self.log || createDebug.log;\r\n\t\t\tlogFn.apply(self, args);\r\n\t\t}\r\n\r\n\t\tdebug.namespace = namespace;\r\n\t\tdebug.useColors = createDebug.useColors();\r\n\t\tdebug.color = createDebug.selectColor(namespace);\r\n\t\tdebug.extend = extend;\r\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\r\n\r\n\t\tObject.defineProperty(debug, 'enabled', {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: () => {\r\n\t\t\t\tif (enableOverride !== null) {\r\n\t\t\t\t\treturn enableOverride;\r\n\t\t\t\t}\r\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\r\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\r\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn enabledCache;\r\n\t\t\t},\r\n\t\t\tset: v => {\r\n\t\t\t\tenableOverride = v;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Env-specific initialization logic for debug instances\r\n\t\tif (typeof createDebug.init === 'function') {\r\n\t\t\tcreateDebug.init(debug);\r\n\t\t}\r\n\r\n\t\treturn debug;\r\n\t}\r\n\r\n\tfunction extend(namespace, delimiter) {\r\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\r\n\t\tnewDebug.log = this.log;\r\n\t\treturn newDebug;\r\n\t}\r\n\r\n\t/**\r\n\t* Enables a debug mode by namespaces. This can include modes\r\n\t* separated by a colon and wildcards.\r\n\t*\r\n\t* @param {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction enable(namespaces) {\r\n\t\tcreateDebug.save(namespaces);\r\n\t\tcreateDebug.namespaces = namespaces;\r\n\r\n\t\tcreateDebug.names = [];\r\n\t\tcreateDebug.skips = [];\r\n\r\n\t\tlet i;\r\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n\t\tconst len = split.length;\r\n\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (!split[i]) {\r\n\t\t\t\t// ignore empty strings\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\r\n\r\n\t\t\tif (namespaces[0] === '-') {\r\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\r\n\t\t\t} else {\r\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Disable debug output.\r\n\t*\r\n\t* @return {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction disable() {\r\n\t\tconst namespaces = [\r\n\t\t\t...createDebug.names.map(toNamespace),\r\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\r\n\t\t].join(',');\r\n\t\tcreateDebug.enable('');\r\n\t\treturn namespaces;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns true if the given mode name is enabled, false otherwise.\r\n\t*\r\n\t* @param {String} name\r\n\t* @return {Boolean}\r\n\t* @api public\r\n\t*/\r\n\tfunction enabled(name) {\r\n\t\tif (name[name.length - 1] === '*') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet i;\r\n\t\tlet len;\r\n\r\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\r\n\t\t\tif (createDebug.skips[i].test(name)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\r\n\t\t\tif (createDebug.names[i].test(name)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t* Convert regexp to namespace\r\n\t*\r\n\t* @param {RegExp} regxep\r\n\t* @return {String} namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction toNamespace(regexp) {\r\n\t\treturn regexp.toString()\r\n\t\t\t.substring(2, regexp.toString().length - 2)\r\n\t\t\t.replace(/\\.\\*\\?$/, '*');\r\n\t}\r\n\r\n\t/**\r\n\t* Coerce `val`.\r\n\t*\r\n\t* @param {Mixed} val\r\n\t* @return {Mixed}\r\n\t* @api private\r\n\t*/\r\n\tfunction coerce(val) {\r\n\t\tif (val instanceof Error) {\r\n\t\t\treturn val.stack || val.message;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t* XXX DO NOT USE. This is a temporary stub function.\r\n\t* XXX It WILL be removed in the next major release.\r\n\t*/\r\n\tfunction destroy() {\r\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\r\n\t}\r\n\r\n\tcreateDebug.enable(createDebug.load());\r\n\r\n\treturn createDebug;\r\n}\r\n\r\nmodule.exports = setup;\r\n", "/* eslint-env browser */\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n */\r\n\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = localstorage();\r\nexports.destroy = (() => {\r\n\tlet warned = false;\r\n\r\n\treturn () => {\r\n\t\tif (!warned) {\r\n\t\t\twarned = true;\r\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\r\n\t\t}\r\n\t};\r\n})();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n\t'#0000CC',\r\n\t'#0000FF',\r\n\t'#0033CC',\r\n\t'#0033FF',\r\n\t'#0066CC',\r\n\t'#0066FF',\r\n\t'#0099CC',\r\n\t'#0099FF',\r\n\t'#00CC00',\r\n\t'#00CC33',\r\n\t'#00CC66',\r\n\t'#00CC99',\r\n\t'#00CCCC',\r\n\t'#00CCFF',\r\n\t'#3300CC',\r\n\t'#3300FF',\r\n\t'#3333CC',\r\n\t'#3333FF',\r\n\t'#3366CC',\r\n\t'#3366FF',\r\n\t'#3399CC',\r\n\t'#3399FF',\r\n\t'#33CC00',\r\n\t'#33CC33',\r\n\t'#33CC66',\r\n\t'#33CC99',\r\n\t'#33CCCC',\r\n\t'#33CCFF',\r\n\t'#6600CC',\r\n\t'#6600FF',\r\n\t'#6633CC',\r\n\t'#6633FF',\r\n\t'#66CC00',\r\n\t'#66CC33',\r\n\t'#9900CC',\r\n\t'#9900FF',\r\n\t'#9933CC',\r\n\t'#9933FF',\r\n\t'#99CC00',\r\n\t'#99CC33',\r\n\t'#CC0000',\r\n\t'#CC0033',\r\n\t'#CC0066',\r\n\t'#CC0099',\r\n\t'#CC00CC',\r\n\t'#CC00FF',\r\n\t'#CC3300',\r\n\t'#CC3333',\r\n\t'#CC3366',\r\n\t'#CC3399',\r\n\t'#CC33CC',\r\n\t'#CC33FF',\r\n\t'#CC6600',\r\n\t'#CC6633',\r\n\t'#CC9900',\r\n\t'#CC9933',\r\n\t'#CCCC00',\r\n\t'#CCCC33',\r\n\t'#FF0000',\r\n\t'#FF0033',\r\n\t'#FF0066',\r\n\t'#FF0099',\r\n\t'#FF00CC',\r\n\t'#FF00FF',\r\n\t'#FF3300',\r\n\t'#FF3333',\r\n\t'#FF3366',\r\n\t'#FF3399',\r\n\t'#FF33CC',\r\n\t'#FF33FF',\r\n\t'#FF6600',\r\n\t'#FF6633',\r\n\t'#FF9900',\r\n\t'#FF9933',\r\n\t'#FFCC00',\r\n\t'#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\n// eslint-disable-next-line complexity\r\nfunction useColors() {\r\n\t// NB: In an Electron preload script, document will be defined but not fully\r\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\r\n\t// explicitly\r\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internet Explorer and Edge do not support colors.\r\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\r\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\r\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n\t\t// Is firefox >= v31?\r\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n\t\t// Double check webkit in userAgent just in case we are in a worker\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n\targs[0] = (this.useColors ? '%c' : '') +\r\n\t\tthis.namespace +\r\n\t\t(this.useColors ? ' %c' : ' ') +\r\n\t\targs[0] +\r\n\t\t(this.useColors ? '%c ' : ' ') +\r\n\t\t'+' + module.exports.humanize(this.diff);\r\n\r\n\tif (!this.useColors) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst c = 'color: ' + this.color;\r\n\targs.splice(1, 0, c, 'color: inherit');\r\n\r\n\t// The final \"%c\" is somewhat tricky, because there could be other\r\n\t// arguments passed either before or after the %c, so we need to\r\n\t// figure out the correct index to insert the CSS into\r\n\tlet index = 0;\r\n\tlet lastC = 0;\r\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\r\n\t\tif (match === '%%') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tindex++;\r\n\t\tif (match === '%c') {\r\n\t\t\t// We only are interested in the *last* %c\r\n\t\t\t// (the user may have provided their own)\r\n\t\t\tlastC = index;\r\n\t\t}\r\n\t});\r\n\r\n\targs.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.debug()` when available.\r\n * No-op when `console.debug` is not a \"function\".\r\n * If `console.debug` is not available, falls back\r\n * to `console.log`.\r\n *\r\n * @api public\r\n */\r\nexports.log = console.debug || console.log || (() => {});\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\nfunction save(namespaces) {\r\n\ttry {\r\n\t\tif (namespaces) {\r\n\t\t\texports.storage.setItem('debug', namespaces);\r\n\t\t} else {\r\n\t\t\texports.storage.removeItem('debug');\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\nfunction load() {\r\n\tlet r;\r\n\ttry {\r\n\t\tr = exports.storage.getItem('debug');\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n\r\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\r\n\t\tr = process.env.DEBUG;\r\n\t}\r\n\r\n\treturn r;\r\n}\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n\ttry {\r\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\r\n\t\t// The Browser also has localStorage in the global context.\r\n\t\treturn localStorage;\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\nmodule.exports = require('./common')(exports);\r\n\r\nconst {formatters} = module.exports;\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nformatters.j = function (v) {\r\n\ttry {\r\n\t\treturn JSON.stringify(v);\r\n\t} catch (error) {\r\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\r\n\t}\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.url = void 0;\r\nconst parseuri = require(\"parseuri\");\r\nconst debug = require(\"debug\")(\"socket.io-client:url\");\r\n/**\r\n * URL parser.\r\n *\r\n * @param uri - url\r\n * @param loc - An object meant to mimic window.location.\r\n *        Defaults to window.location.\r\n * @public\r\n */\r\nfunction url(uri, loc) {\r\n    let obj = uri;\r\n    // default to window.location\r\n    loc = loc || (typeof location !== \"undefined\" && location);\r\n    if (null == uri)\r\n        uri = loc.protocol + \"//\" + loc.host;\r\n    // relative path support\r\n    if (typeof uri === \"string\") {\r\n        if (\"/\" === uri.charAt(0)) {\r\n            if (\"/\" === uri.charAt(1)) {\r\n                uri = loc.protocol + uri;\r\n            }\r\n            else {\r\n                uri = loc.host + uri;\r\n            }\r\n        }\r\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n            debug(\"protocol-less url %s\", uri);\r\n            if (\"undefined\" !== typeof loc) {\r\n                uri = loc.protocol + \"//\" + uri;\r\n            }\r\n            else {\r\n                uri = \"https://\" + uri;\r\n            }\r\n        }\r\n        // parse\r\n        debug(\"parse %s\", uri);\r\n        obj = parseuri(uri);\r\n    }\r\n    // make sure we treat `localhost:80` and `localhost` equally\r\n    if (!obj.port) {\r\n        if (/^(http|ws)$/.test(obj.protocol)) {\r\n            obj.port = \"80\";\r\n        }\r\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n            obj.port = \"443\";\r\n        }\r\n    }\r\n    obj.path = obj.path || \"/\";\r\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\r\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\r\n    // define unique id\r\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port;\r\n    // define href\r\n    obj.href =\r\n        obj.protocol +\r\n            \"://\" +\r\n            host +\r\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\r\n    return obj;\r\n}\r\nexports.url = url;\r\n", "\r\n/**\r\n * Module exports.\r\n *\r\n * Logic borrowed from Modernizr:\r\n *\r\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\r\n */\r\n\r\ntry {\r\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\r\n    'withCredentials' in new XMLHttpRequest();\r\n} catch (err) {\r\n  // if XMLHttp support is disabled in IE then it will throw\r\n  // when trying to create\r\n  module.exports = false;\r\n}\r\n", "module.exports = (() => {\r\n  if (typeof self !== \"undefined\") {\r\n    return self;\r\n  } else if (typeof window !== \"undefined\") {\r\n    return window;\r\n  } else {\r\n    return Function(\"return this\")();\r\n  }\r\n})();\r\n", "// browser shim for xmlhttprequest module\r\n\r\nconst hasCORS = require(\"has-cors\");\r\nconst globalThis = require(\"./globalThis\");\r\n\r\nmodule.exports = function(opts) {\r\n  const xdomain = opts.xdomain;\r\n\r\n  // scheme must be same when usign XDomainRequest\r\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n  const xscheme = opts.xscheme;\r\n\r\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\r\n  // https://github.com/Automattic/engine.io-client/pull/217\r\n  const enablesXDR = opts.enablesXDR;\r\n\r\n  // XMLHttpRequest can be disabled on IE\r\n  try {\r\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n  } catch (e) {}\r\n\r\n  // Use XDomainRequest for IE8 if enablesXDR is true\r\n  // because loading bar keeps flashing when using jsonp-polling\r\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n  try {\r\n    if (\"undefined\" !== typeof XDomainRequest && !xscheme && enablesXDR) {\r\n      return new XDomainRequest();\r\n    }\r\n  } catch (e) {}\r\n\r\n  if (!xdomain) {\r\n    try {\r\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\r\n        \"Microsoft.XMLHTTP\"\r\n      );\r\n    } catch (e) {}\r\n  }\r\n};\r\n", "const PACKET_TYPES = Object.create(null); // no Map = no polyfill\r\nPACKET_TYPES[\"open\"] = \"0\";\r\nPACKET_TYPES[\"close\"] = \"1\";\r\nPACKET_TYPES[\"ping\"] = \"2\";\r\nPACKET_TYPES[\"pong\"] = \"3\";\r\nPACKET_TYPES[\"message\"] = \"4\";\r\nPACKET_TYPES[\"upgrade\"] = \"5\";\r\nPACKET_TYPES[\"noop\"] = \"6\";\r\n\r\nconst PACKET_TYPES_REVERSE = Object.create(null);\r\nObject.keys(PACKET_TYPES).forEach(key => {\r\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\r\n});\r\n\r\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\r\n\r\nmodule.exports = {\r\n  PACKET_TYPES,\r\n  PACKET_TYPES_REVERSE,\r\n  ERROR_PACKET\r\n};\r\n", "const { PACKET_TYPES } = require(\"./commons\");\r\n\r\nconst withNativeBlob =\r\n  typeof Blob === \"function\" ||\r\n  (typeof Blob !== \"undefined\" &&\r\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\n\r\n// ArrayBuffer.isView method is not defined in IE10\r\nconst isView = obj => {\r\n  return typeof ArrayBuffer.isView === \"function\"\r\n    ? ArrayBuffer.isView(obj)\r\n    : obj && obj.buffer instanceof ArrayBuffer;\r\n};\r\n\r\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\r\n  if (withNativeBlob && data instanceof Blob) {\r\n    if (supportsBinary) {\r\n      return callback(data);\r\n    } else {\r\n      return encodeBlobAsBase64(data, callback);\r\n    }\r\n  } else if (\r\n    withNativeArrayBuffer &&\r\n    (data instanceof ArrayBuffer || isView(data))\r\n  ) {\r\n    if (supportsBinary) {\r\n      return callback(data);\r\n    } else {\r\n      return encodeBlobAsBase64(new Blob([data]), callback);\r\n    }\r\n  }\r\n  // plain string\r\n  return callback(PACKET_TYPES[type] + (data || \"\"));\r\n};\r\n\r\nconst encodeBlobAsBase64 = (data, callback) => {\r\n  const fileReader = new FileReader();\r\n  fileReader.onload = function() {\r\n    const content = fileReader.result.split(\",\")[1];\r\n    callback(\"b\" + content);\r\n  };\r\n  return fileReader.readAsDataURL(data);\r\n};\r\n\r\nmodule.exports = encodePacket;\r\n", "/*\r\n * base64-arraybuffer\r\n * https://github.com/niklasvh/base64-arraybuffer\r\n *\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n * Licensed under the MIT license.\r\n */\r\n(function(chars){\r\n  \"use strict\";\r\n\r\n  exports.encode = function(arraybuffer) {\r\n    var bytes = new Uint8Array(arraybuffer),\r\n    i, len = bytes.length, base64 = \"\";\r\n\r\n    for (i = 0; i < len; i+=3) {\r\n      base64 += chars[bytes[i] >> 2];\r\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n      base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2) {\r\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n    } else if (len % 3 === 1) {\r\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n    }\r\n\r\n    return base64;\r\n  };\r\n\r\n  exports.decode =  function(base64) {\r\n    var bufferLength = base64.length * 0.75,\r\n    len = base64.length, i, p = 0,\r\n    encoded1, encoded2, encoded3, encoded4;\r\n\r\n    if (base64[base64.length - 1] === \"=\") {\r\n      bufferLength--;\r\n      if (base64[base64.length - 2] === \"=\") {\r\n        bufferLength--;\r\n      }\r\n    }\r\n\r\n    var arraybuffer = new ArrayBuffer(bufferLength),\r\n    bytes = new Uint8Array(arraybuffer);\r\n\r\n    for (i = 0; i < len; i+=4) {\r\n      encoded1 = chars.indexOf(base64[i]);\r\n      encoded2 = chars.indexOf(base64[i+1]);\r\n      encoded3 = chars.indexOf(base64[i+2]);\r\n      encoded4 = chars.indexOf(base64[i+3]);\r\n\r\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arraybuffer;\r\n  };\r\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\r\n", "const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\r\n\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\n\r\nlet base64decoder;\r\nif (withNativeArrayBuffer) {\r\n  base64decoder = require(\"base64-arraybuffer\");\r\n}\r\n\r\nconst decodePacket = (encodedPacket, binaryType) => {\r\n  if (typeof encodedPacket !== \"string\") {\r\n    return {\r\n      type: \"message\",\r\n      data: mapBinary(encodedPacket, binaryType)\r\n    };\r\n  }\r\n  const type = encodedPacket.charAt(0);\r\n  if (type === \"b\") {\r\n    return {\r\n      type: \"message\",\r\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\r\n    };\r\n  }\r\n  const packetType = PACKET_TYPES_REVERSE[type];\r\n  if (!packetType) {\r\n    return ERROR_PACKET;\r\n  }\r\n  return encodedPacket.length > 1\r\n    ? {\r\n        type: PACKET_TYPES_REVERSE[type],\r\n        data: encodedPacket.substring(1)\r\n      }\r\n    : {\r\n        type: PACKET_TYPES_REVERSE[type]\r\n      };\r\n};\r\n\r\nconst decodeBase64Packet = (data, binaryType) => {\r\n  if (base64decoder) {\r\n    const decoded = base64decoder.decode(data);\r\n    return mapBinary(decoded, binaryType);\r\n  } else {\r\n    return { base64: true, data }; // fallback for old browsers\r\n  }\r\n};\r\n\r\nconst mapBinary = (data, binaryType) => {\r\n  switch (binaryType) {\r\n    case \"blob\":\r\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\r\n    case \"arraybuffer\":\r\n    default:\r\n      return data; // assuming the data is already an ArrayBuffer\r\n  }\r\n};\r\n\r\nmodule.exports = decodePacket;\r\n", "const encodePacket = require(\"./encodePacket\");\r\nconst decodePacket = require(\"./decodePacket\");\r\n\r\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\r\n\r\nconst encodePayload = (packets, callback) => {\r\n  // some packets may be added to the array while encoding, so the initial length must be saved\r\n  const length = packets.length;\r\n  const encodedPackets = new Array(length);\r\n  let count = 0;\r\n\r\n  packets.forEach((packet, i) => {\r\n    // force base64 encoding for binary packets\r\n    encodePacket(packet, false, encodedPacket => {\r\n      encodedPackets[i] = encodedPacket;\r\n      if (++count === length) {\r\n        callback(encodedPackets.join(SEPARATOR));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst decodePayload = (encodedPayload, binaryType) => {\r\n  const encodedPackets = encodedPayload.split(SEPARATOR);\r\n  const packets = [];\r\n  for (let i = 0; i < encodedPackets.length; i++) {\r\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\r\n    packets.push(decodedPacket);\r\n    if (decodedPacket.type === \"error\") {\r\n      break;\r\n    }\r\n  }\r\n  return packets;\r\n};\r\n\r\nmodule.exports = {\r\n  protocol: 4,\r\n  encodePacket,\r\n  encodePayload,\r\n  decodePacket,\r\n  decodePayload\r\n};\r\n", "\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n", "const parser = require(\"engine.io-parser\");\r\nconst Emitter = require(\"component-emitter\");\r\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\r\n\r\nclass Transport extends Emitter {\r\n  /**\r\n   * Transport abstract constructor.\r\n   *\r\n   * @param {Object} options.\r\n   * @api private\r\n   */\r\n  constructor(opts) {\r\n    super();\r\n\r\n    this.opts = opts;\r\n    this.query = opts.query;\r\n    this.readyState = \"\";\r\n    this.socket = opts.socket;\r\n  }\r\n\r\n  /**\r\n   * Emits an error.\r\n   *\r\n   * @param {String} str\r\n   * @return {Transport} for chaining\r\n   * @api public\r\n   */\r\n  onError(msg, desc) {\r\n    const err = new Error(msg);\r\n    err.type = \"TransportError\";\r\n    err.description = desc;\r\n    this.emit(\"error\", err);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Opens the transport.\r\n   *\r\n   * @api public\r\n   */\r\n  open() {\r\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\r\n      this.readyState = \"opening\";\r\n      this.doOpen();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Closes the transport.\r\n   *\r\n   * @api private\r\n   */\r\n  close() {\r\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n      this.doClose();\r\n      this.onClose();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sends multiple packets.\r\n   *\r\n   * @param {Array} packets\r\n   * @api private\r\n   */\r\n  send(packets) {\r\n    if (\"open\" === this.readyState) {\r\n      this.write(packets);\r\n    } else {\r\n      // this might happen if the transport was silently closed in the beforeunload event handler\r\n      debug(\"transport is not open, discarding packets\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called upon open\r\n   *\r\n   * @api private\r\n   */\r\n  onOpen() {\r\n    this.readyState = \"open\";\r\n    this.writable = true;\r\n    this.emit(\"open\");\r\n  }\r\n\r\n  /**\r\n   * Called with data.\r\n   *\r\n   * @param {String} data\r\n   * @api private\r\n   */\r\n  onData(data) {\r\n    const packet = parser.decodePacket(data, this.socket.binaryType);\r\n    this.onPacket(packet);\r\n  }\r\n\r\n  /**\r\n   * Called with a decoded packet.\r\n   */\r\n  onPacket(packet) {\r\n    this.emit(\"packet\", packet);\r\n  }\r\n\r\n  /**\r\n   * Called upon close.\r\n   *\r\n   * @api private\r\n   */\r\n  onClose() {\r\n    this.readyState = \"closed\";\r\n    this.emit(\"close\");\r\n  }\r\n}\r\n\r\nmodule.exports = Transport;\r\n", "/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n", "'use strict';\r\n\r\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\r\n  , length = 64\r\n  , map = {}\r\n  , seed = 0\r\n  , i = 0\r\n  , prev;\r\n\r\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\r\nfunction encode(num) {\r\n  var encoded = '';\r\n\r\n  do {\r\n    encoded = alphabet[num % length] + encoded;\r\n    num = Math.floor(num / length);\r\n  } while (num > 0);\r\n\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\r\nfunction decode(str) {\r\n  var decoded = 0;\r\n\r\n  for (i = 0; i < str.length; i++) {\r\n    decoded = decoded * length + map[str.charAt(i)];\r\n  }\r\n\r\n  return decoded;\r\n}\r\n\r\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\r\nfunction yeast() {\r\n  var now = encode(+new Date());\r\n\r\n  if (now !== prev) return seed = 0, prev = now;\r\n  return now +'.'+ encode(seed++);\r\n}\r\n\r\n//\r\n// Map each character to its index.\r\n//\r\nfor (; i < length; i++) map[alphabet[i]] = i;\r\n\r\n//\r\n// Expose the `yeast`, `encode` and `decode` functions.\r\n//\r\nyeast.encode = encode;\r\nyeast.decode = decode;\r\nmodule.exports = yeast;\r\n", "const Transport = require(\"../transport\");\r\nconst parseqs = require(\"parseqs\");\r\nconst parser = require(\"engine.io-parser\");\r\nconst yeast = require(\"yeast\");\r\n\r\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\r\n\r\nclass Polling extends Transport {\r\n  /**\r\n   * Transport name.\r\n   */\r\n  get name() {\r\n    return \"polling\";\r\n  }\r\n\r\n  /**\r\n   * Opens the socket (triggers polling). We write a PING message to determine\r\n   * when the transport is open.\r\n   *\r\n   * @api private\r\n   */\r\n  doOpen() {\r\n    this.poll();\r\n  }\r\n\r\n  /**\r\n   * Pauses polling.\r\n   *\r\n   * @param {Function} callback upon buffers are flushed and transport is paused\r\n   * @api private\r\n   */\r\n  pause(onPause) {\r\n    const self = this;\r\n\r\n    this.readyState = \"pausing\";\r\n\r\n    function pause() {\r\n      debug(\"paused\");\r\n      self.readyState = \"paused\";\r\n      onPause();\r\n    }\r\n\r\n    if (this.polling || !this.writable) {\r\n      let total = 0;\r\n\r\n      if (this.polling) {\r\n        debug(\"we are currently polling - waiting to pause\");\r\n        total++;\r\n        this.once(\"pollComplete\", function() {\r\n          debug(\"pre-pause polling complete\");\r\n          --total || pause();\r\n        });\r\n      }\r\n\r\n      if (!this.writable) {\r\n        debug(\"we are currently writing - waiting to pause\");\r\n        total++;\r\n        this.once(\"drain\", function() {\r\n          debug(\"pre-pause writing complete\");\r\n          --total || pause();\r\n        });\r\n      }\r\n    } else {\r\n      pause();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts polling cycle.\r\n   *\r\n   * @api public\r\n   */\r\n  poll() {\r\n    debug(\"polling\");\r\n    this.polling = true;\r\n    this.doPoll();\r\n    this.emit(\"poll\");\r\n  }\r\n\r\n  /**\r\n   * Overloads onData to detect payloads.\r\n   *\r\n   * @api private\r\n   */\r\n  onData(data) {\r\n    const self = this;\r\n    debug(\"polling got data %s\", data);\r\n    const callback = function(packet, index, total) {\r\n      // if its the first message we consider the transport open\r\n      if (\"opening\" === self.readyState && packet.type === \"open\") {\r\n        self.onOpen();\r\n      }\r\n\r\n      // if its a close packet, we close the ongoing requests\r\n      if (\"close\" === packet.type) {\r\n        self.onClose();\r\n        return false;\r\n      }\r\n\r\n      // otherwise bypass onData and handle the message\r\n      self.onPacket(packet);\r\n    };\r\n\r\n    // decode payload\r\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\r\n\r\n    // if an event did not trigger closing\r\n    if (\"closed\" !== this.readyState) {\r\n      // if we got data we're not polling\r\n      this.polling = false;\r\n      this.emit(\"pollComplete\");\r\n\r\n      if (\"open\" === this.readyState) {\r\n        this.poll();\r\n      } else {\r\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For polling, send a close packet.\r\n   *\r\n   * @api private\r\n   */\r\n  doClose() {\r\n    const self = this;\r\n\r\n    function close() {\r\n      debug(\"writing close packet\");\r\n      self.write([{ type: \"close\" }]);\r\n    }\r\n\r\n    if (\"open\" === this.readyState) {\r\n      debug(\"transport open - closing\");\r\n      close();\r\n    } else {\r\n      // in case we're trying to close while\r\n      // handshaking is in progress (GH-164)\r\n      debug(\"transport not open - deferring close\");\r\n      this.once(\"open\", close);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Writes a packets payload.\r\n   *\r\n   * @param {Array} data packets\r\n   * @param {Function} drain callback\r\n   * @api private\r\n   */\r\n  write(packets) {\r\n    this.writable = false;\r\n\r\n    parser.encodePayload(packets, data => {\r\n      this.doWrite(data, () => {\r\n        this.writable = true;\r\n        this.emit(\"drain\");\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generates uri for connection.\r\n   *\r\n   * @api private\r\n   */\r\n  uri() {\r\n    let query = this.query || {};\r\n    const schema = this.opts.secure ? \"https\" : \"http\";\r\n    let port = \"\";\r\n\r\n    // cache busting is forced\r\n    if (false !== this.opts.timestampRequests) {\r\n      query[this.opts.timestampParam] = yeast();\r\n    }\r\n\r\n    if (!this.supportsBinary && !query.sid) {\r\n      query.b64 = 1;\r\n    }\r\n\r\n    query = parseqs.encode(query);\r\n\r\n    // avoid port if default for schema\r\n    if (\r\n      this.opts.port &&\r\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\r\n        (\"http\" === schema && Number(this.opts.port) !== 80))\r\n    ) {\r\n      port = \":\" + this.opts.port;\r\n    }\r\n\r\n    // prepend ? to query\r\n    if (query.length) {\r\n      query = \"?\" + query;\r\n    }\r\n\r\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\r\n    return (\r\n      schema +\r\n      \"://\" +\r\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\r\n      port +\r\n      this.opts.path +\r\n      query\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = Polling;\r\n", "module.exports.pick = (obj, ...attr) => {\r\n  return attr.reduce((acc, k) => {\r\n    if (obj.hasOwnProperty(k)) {\r\n      acc[k] = obj[k];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n", "/* global attachEvent */\r\n\r\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\r\nconst Polling = require(\"./polling\");\r\nconst Emitter = require(\"component-emitter\");\r\nconst { pick } = require(\"../util\");\r\nconst globalThis = require(\"../globalThis\");\r\n\r\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\r\n\r\n/**\r\n * Empty function\r\n */\r\n\r\nfunction empty() {}\r\n\r\nconst hasXHR2 = (function() {\r\n  const xhr = new XMLHttpRequest({ xdomain: false });\r\n  return null != xhr.responseType;\r\n})();\r\n\r\nclass XHR extends Polling {\r\n  /**\r\n   * XHR Polling constructor.\r\n   *\r\n   * @param {Object} opts\r\n   * @api public\r\n   */\r\n  constructor(opts) {\r\n    super(opts);\r\n\r\n    if (typeof location !== \"undefined\") {\r\n      const isSSL = \"https:\" === location.protocol;\r\n      let port = location.port;\r\n\r\n      // some user agents have empty `location.port`\r\n      if (!port) {\r\n        port = isSSL ? 443 : 80;\r\n      }\r\n\r\n      this.xd =\r\n        (typeof location !== \"undefined\" &&\r\n          opts.hostname !== location.hostname) ||\r\n        port !== opts.port;\r\n      this.xs = opts.secure !== isSSL;\r\n    }\r\n    /**\r\n     * XHR supports binary\r\n     */\r\n    const forceBase64 = opts && opts.forceBase64;\r\n    this.supportsBinary = hasXHR2 && !forceBase64;\r\n  }\r\n\r\n  /**\r\n   * Creates a request.\r\n   *\r\n   * @param {String} method\r\n   * @api private\r\n   */\r\n  request(opts = {}) {\r\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\r\n    return new Request(this.uri(), opts);\r\n  }\r\n\r\n  /**\r\n   * Sends data.\r\n   *\r\n   * @param {String} data to send.\r\n   * @param {Function} called upon flush.\r\n   * @api private\r\n   */\r\n  doWrite(data, fn) {\r\n    const req = this.request({\r\n      method: \"POST\",\r\n      data: data\r\n    });\r\n    const self = this;\r\n    req.on(\"success\", fn);\r\n    req.on(\"error\", function(err) {\r\n      self.onError(\"xhr post error\", err);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Starts a poll cycle.\r\n   *\r\n   * @api private\r\n   */\r\n  doPoll() {\r\n    debug(\"xhr poll\");\r\n    const req = this.request();\r\n    const self = this;\r\n    req.on(\"data\", function(data) {\r\n      self.onData(data);\r\n    });\r\n    req.on(\"error\", function(err) {\r\n      self.onError(\"xhr poll error\", err);\r\n    });\r\n    this.pollXhr = req;\r\n  }\r\n}\r\n\r\nclass Request extends Emitter {\r\n  /**\r\n   * Request constructor\r\n   *\r\n   * @param {Object} options\r\n   * @api public\r\n   */\r\n  constructor(uri, opts) {\r\n    super();\r\n    this.opts = opts;\r\n\r\n    this.method = opts.method || \"GET\";\r\n    this.uri = uri;\r\n    this.async = false !== opts.async;\r\n    this.data = undefined !== opts.data ? opts.data : null;\r\n\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * Creates the XHR object and sends the request.\r\n   *\r\n   * @api private\r\n   */\r\n  create() {\r\n    const opts = pick(\r\n      this.opts,\r\n      \"agent\",\r\n      \"enablesXDR\",\r\n      \"pfx\",\r\n      \"key\",\r\n      \"passphrase\",\r\n      \"cert\",\r\n      \"ca\",\r\n      \"ciphers\",\r\n      \"rejectUnauthorized\"\r\n    );\r\n    opts.xdomain = !!this.opts.xd;\r\n    opts.xscheme = !!this.opts.xs;\r\n\r\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\r\n    const self = this;\r\n\r\n    try {\r\n      debug(\"xhr open %s: %s\", this.method, this.uri);\r\n      xhr.open(this.method, this.uri, this.async);\r\n      try {\r\n        if (this.opts.extraHeaders) {\r\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n          for (let i in this.opts.extraHeaders) {\r\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\r\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {}\r\n\r\n      if (\"POST\" === this.method) {\r\n        try {\r\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n        } catch (e) {}\r\n      }\r\n\r\n      try {\r\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n      } catch (e) {}\r\n\r\n      // ie6 check\r\n      if (\"withCredentials\" in xhr) {\r\n        xhr.withCredentials = this.opts.withCredentials;\r\n      }\r\n\r\n      if (this.opts.requestTimeout) {\r\n        xhr.timeout = this.opts.requestTimeout;\r\n      }\r\n\r\n      if (this.hasXDR()) {\r\n        xhr.onload = function() {\r\n          self.onLoad();\r\n        };\r\n        xhr.onerror = function() {\r\n          self.onError(xhr.responseText);\r\n        };\r\n      } else {\r\n        xhr.onreadystatechange = function() {\r\n          if (4 !== xhr.readyState) return;\r\n          if (200 === xhr.status || 1223 === xhr.status) {\r\n            self.onLoad();\r\n          } else {\r\n            // make sure the `error` event handler that's user-set\r\n            // does not throw in the same tick and gets caught here\r\n            setTimeout(function() {\r\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n            }, 0);\r\n          }\r\n        };\r\n      }\r\n\r\n      debug(\"xhr data %s\", this.data);\r\n      xhr.send(this.data);\r\n    } catch (e) {\r\n      // Need to defer since .create() is called directly from the constructor\r\n      // and thus the 'error' event can only be only bound *after* this exception\r\n      // occurs.  Therefore, also, we cannot throw here at all.\r\n      setTimeout(function() {\r\n        self.onError(e);\r\n      }, 0);\r\n      return;\r\n    }\r\n\r\n    if (typeof document !== \"undefined\") {\r\n      this.index = Request.requestsCount++;\r\n      Request.requests[this.index] = this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called upon successful response.\r\n   *\r\n   * @api private\r\n   */\r\n  onSuccess() {\r\n    this.emit(\"success\");\r\n    this.cleanup();\r\n  }\r\n\r\n  /**\r\n   * Called if we have data.\r\n   *\r\n   * @api private\r\n   */\r\n  onData(data) {\r\n    this.emit(\"data\", data);\r\n    this.onSuccess();\r\n  }\r\n\r\n  /**\r\n   * Called upon error.\r\n   *\r\n   * @api private\r\n   */\r\n  onError(err) {\r\n    this.emit(\"error\", err);\r\n    this.cleanup(true);\r\n  }\r\n\r\n  /**\r\n   * Cleans up house.\r\n   *\r\n   * @api private\r\n   */\r\n  cleanup(fromError) {\r\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\r\n      return;\r\n    }\r\n    // xmlhttprequest\r\n    if (this.hasXDR()) {\r\n      this.xhr.onload = this.xhr.onerror = empty;\r\n    } else {\r\n      this.xhr.onreadystatechange = empty;\r\n    }\r\n\r\n    if (fromError) {\r\n      try {\r\n        this.xhr.abort();\r\n      } catch (e) {}\r\n    }\r\n\r\n    if (typeof document !== \"undefined\") {\r\n      delete Request.requests[this.index];\r\n    }\r\n\r\n    this.xhr = null;\r\n  }\r\n\r\n  /**\r\n   * Called upon load.\r\n   *\r\n   * @api private\r\n   */\r\n  onLoad() {\r\n    const data = this.xhr.responseText;\r\n    if (data !== null) {\r\n      this.onData(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if it has XDomainRequest.\r\n   *\r\n   * @api private\r\n   */\r\n  hasXDR() {\r\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\r\n  }\r\n\r\n  /**\r\n   * Aborts the request.\r\n   *\r\n   * @api public\r\n   */\r\n  abort() {\r\n    this.cleanup();\r\n  }\r\n}\r\n\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\n\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n\r\nif (typeof document !== \"undefined\") {\r\n  if (typeof attachEvent === \"function\") {\r\n    attachEvent(\"onunload\", unloadHandler);\r\n  } else if (typeof addEventListener === \"function\") {\r\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\r\n    addEventListener(terminationEvent, unloadHandler, false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler() {\r\n  for (let i in Request.requests) {\r\n    if (Request.requests.hasOwnProperty(i)) {\r\n      Request.requests[i].abort();\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = XHR;\r\nmodule.exports.Request = Request;\r\n", "const Polling = require(\"./polling\");\r\nconst globalThis = require(\"../globalThis\");\r\n\r\nconst rNewline = /\\n/g;\r\nconst rEscapedNewline = /\\\\n/g;\r\n\r\n/**\r\n * Global JSONP callbacks.\r\n */\r\n\r\nlet callbacks;\r\n\r\nclass JSONPPolling extends Polling {\r\n  /**\r\n   * JSONP Polling constructor.\r\n   *\r\n   * @param {Object} opts.\r\n   * @api public\r\n   */\r\n  constructor(opts) {\r\n    super(opts);\r\n\r\n    this.query = this.query || {};\r\n\r\n    // define global callbacks array if not present\r\n    // we do this here (lazily) to avoid unneeded global pollution\r\n    if (!callbacks) {\r\n      // we need to consider multiple engines in the same page\r\n      callbacks = globalThis.___eio = globalThis.___eio || [];\r\n    }\r\n\r\n    // callback identifier\r\n    this.index = callbacks.length;\r\n\r\n    // add callback to jsonp global\r\n    const self = this;\r\n    callbacks.push(function(msg) {\r\n      self.onData(msg);\r\n    });\r\n\r\n    // append to query string\r\n    this.query.j = this.index;\r\n  }\r\n\r\n  /**\r\n   * JSONP only supports binary as base64 encoded strings\r\n   */\r\n  get supportsBinary() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Closes the socket.\r\n   *\r\n   * @api private\r\n   */\r\n  doClose() {\r\n    if (this.script) {\r\n      // prevent spurious errors from being emitted when the window is unloaded\r\n      this.script.onerror = () => {};\r\n      this.script.parentNode.removeChild(this.script);\r\n      this.script = null;\r\n    }\r\n\r\n    if (this.form) {\r\n      this.form.parentNode.removeChild(this.form);\r\n      this.form = null;\r\n      this.iframe = null;\r\n    }\r\n\r\n    super.doClose();\r\n  }\r\n\r\n  /**\r\n   * Starts a poll cycle.\r\n   *\r\n   * @api private\r\n   */\r\n  doPoll() {\r\n    const self = this;\r\n    const script = document.createElement(\"script\");\r\n\r\n    if (this.script) {\r\n      this.script.parentNode.removeChild(this.script);\r\n      this.script = null;\r\n    }\r\n\r\n    script.async = true;\r\n    script.src = this.uri();\r\n    script.onerror = function(e) {\r\n      self.onError(\"jsonp poll error\", e);\r\n    };\r\n\r\n    const insertAt = document.getElementsByTagName(\"script\")[0];\r\n    if (insertAt) {\r\n      insertAt.parentNode.insertBefore(script, insertAt);\r\n    } else {\r\n      (document.head || document.body).appendChild(script);\r\n    }\r\n    this.script = script;\r\n\r\n    const isUAgecko =\r\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\r\n\r\n    if (isUAgecko) {\r\n      setTimeout(function() {\r\n        const iframe = document.createElement(\"iframe\");\r\n        document.body.appendChild(iframe);\r\n        document.body.removeChild(iframe);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Writes with a hidden iframe.\r\n   *\r\n   * @param {String} data to send\r\n   * @param {Function} called upon flush.\r\n   * @api private\r\n   */\r\n  doWrite(data, fn) {\r\n    const self = this;\r\n    let iframe;\r\n\r\n    if (!this.form) {\r\n      const form = document.createElement(\"form\");\r\n      const area = document.createElement(\"textarea\");\r\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\r\n\r\n      form.className = \"socketio\";\r\n      form.style.position = \"absolute\";\r\n      form.style.top = \"-1000px\";\r\n      form.style.left = \"-1000px\";\r\n      form.target = id;\r\n      form.method = \"POST\";\r\n      form.setAttribute(\"accept-charset\", \"utf-8\");\r\n      area.name = \"d\";\r\n      form.appendChild(area);\r\n      document.body.appendChild(form);\r\n\r\n      this.form = form;\r\n      this.area = area;\r\n    }\r\n\r\n    this.form.action = this.uri();\r\n\r\n    function complete() {\r\n      initIframe();\r\n      fn();\r\n    }\r\n\r\n    function initIframe() {\r\n      if (self.iframe) {\r\n        try {\r\n          self.form.removeChild(self.iframe);\r\n        } catch (e) {\r\n          self.onError(\"jsonp polling iframe removal error\", e);\r\n        }\r\n      }\r\n\r\n      try {\r\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n        const html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\r\n        iframe = document.createElement(html);\r\n      } catch (e) {\r\n        iframe = document.createElement(\"iframe\");\r\n        iframe.name = self.iframeId;\r\n        iframe.src = \"javascript:0\";\r\n      }\r\n\r\n      iframe.id = self.iframeId;\r\n\r\n      self.form.appendChild(iframe);\r\n      self.iframe = iframe;\r\n    }\r\n\r\n    initIframe();\r\n\r\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\r\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\r\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\r\n    this.area.value = data.replace(rNewline, \"\\\\n\");\r\n\r\n    try {\r\n      this.form.submit();\r\n    } catch (e) {}\r\n\r\n    if (this.iframe.attachEvent) {\r\n      this.iframe.onreadystatechange = function() {\r\n        if (self.iframe.readyState === \"complete\") {\r\n          complete();\r\n        }\r\n      };\r\n    } else {\r\n      this.iframe.onload = complete;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = JSONPPolling;\r\n", "const globalThis = require(\"../globalThis\");\r\n\r\nmodule.exports = {\r\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\r\n  usingBrowserWebSocket: true,\r\n  defaultBinaryType: \"arraybuffer\"\r\n};\r\n", "const Transport = require(\"../transport\");\r\nconst parser = require(\"engine.io-parser\");\r\nconst parseqs = require(\"parseqs\");\r\nconst yeast = require(\"yeast\");\r\nconst { pick } = require(\"../util\");\r\nconst {\r\n  WebSocket,\r\n  usingBrowserWebSocket,\r\n  defaultBinaryType\r\n} = require(\"./websocket-constructor\");\r\n\r\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\r\n\r\n// detect ReactNative environment\r\nconst isReactNative =\r\n  typeof navigator !== \"undefined\" &&\r\n  typeof navigator.product === \"string\" &&\r\n  navigator.product.toLowerCase() === \"reactnative\";\r\n\r\nclass WS extends Transport {\r\n  /**\r\n   * WebSocket transport constructor.\r\n   *\r\n   * @api {Object} connection options\r\n   * @api public\r\n   */\r\n  constructor(opts) {\r\n    super(opts);\r\n\r\n    this.supportsBinary = !opts.forceBase64;\r\n  }\r\n\r\n  /**\r\n   * Transport name.\r\n   *\r\n   * @api public\r\n   */\r\n  get name() {\r\n    return \"websocket\";\r\n  }\r\n\r\n  /**\r\n   * Opens socket.\r\n   *\r\n   * @api private\r\n   */\r\n  doOpen() {\r\n    if (!this.check()) {\r\n      // let probe timeout\r\n      return;\r\n    }\r\n\r\n    const uri = this.uri();\r\n    const protocols = this.opts.protocols;\r\n\r\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\r\n    const opts = isReactNative\r\n      ? {}\r\n      : pick(\r\n          this.opts,\r\n          \"agent\",\r\n          \"perMessageDeflate\",\r\n          \"pfx\",\r\n          \"key\",\r\n          \"passphrase\",\r\n          \"cert\",\r\n          \"ca\",\r\n          \"ciphers\",\r\n          \"rejectUnauthorized\",\r\n          \"localAddress\",\r\n          \"protocolVersion\",\r\n          \"origin\",\r\n          \"maxPayload\",\r\n          \"family\",\r\n          \"checkServerIdentity\"\r\n        );\r\n\r\n    if (this.opts.extraHeaders) {\r\n      opts.headers = this.opts.extraHeaders;\r\n    }\r\n\r\n    try {\r\n      this.ws =\r\n        usingBrowserWebSocket && !isReactNative\r\n          ? protocols\r\n            ? new WebSocket(uri, protocols)\r\n            : new WebSocket(uri)\r\n          : new WebSocket(uri, protocols, opts);\r\n    } catch (err) {\r\n      return this.emit(\"error\", err);\r\n    }\r\n\r\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to the socket\r\n   *\r\n   * @api private\r\n   */\r\n  addEventListeners() {\r\n    const self = this;\r\n\r\n    this.ws.onopen = function() {\r\n      self.onOpen();\r\n    };\r\n    this.ws.onclose = function() {\r\n      self.onClose();\r\n    };\r\n    this.ws.onmessage = function(ev) {\r\n      self.onData(ev.data);\r\n    };\r\n    this.ws.onerror = function(e) {\r\n      self.onError(\"websocket error\", e);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Writes data to socket.\r\n   *\r\n   * @param {Array} array of packets.\r\n   * @api private\r\n   */\r\n  write(packets) {\r\n    const self = this;\r\n    this.writable = false;\r\n\r\n    // encodePacket efficient as it uses WS framing\r\n    // no need for encodePayload\r\n    let total = packets.length;\r\n    let i = 0;\r\n    const l = total;\r\n    for (; i < l; i++) {\r\n      (function(packet) {\r\n        parser.encodePacket(packet, self.supportsBinary, function(data) {\r\n          // always create a new object (GH-437)\r\n          const opts = {};\r\n          if (!usingBrowserWebSocket) {\r\n            if (packet.options) {\r\n              opts.compress = packet.options.compress;\r\n            }\r\n\r\n            if (self.opts.perMessageDeflate) {\r\n              const len =\r\n                \"string\" === typeof data\r\n                  ? Buffer.byteLength(data)\r\n                  : data.length;\r\n              if (len < self.opts.perMessageDeflate.threshold) {\r\n                opts.compress = false;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Sometimes the websocket has already been closed but the browser didn't\r\n          // have a chance of informing us about it yet, in that case send will\r\n          // throw an error\r\n          try {\r\n            if (usingBrowserWebSocket) {\r\n              // TypeError is thrown when passing the second argument on Safari\r\n              self.ws.send(data);\r\n            } else {\r\n              self.ws.send(data, opts);\r\n            }\r\n          } catch (e) {\r\n            debug(\"websocket closed before onclose event\");\r\n          }\r\n\r\n          --total || done();\r\n        });\r\n      })(packets[i]);\r\n    }\r\n\r\n    function done() {\r\n      self.emit(\"flush\");\r\n\r\n      // fake drain\r\n      // defer to next tick to allow Socket to clear writeBuffer\r\n      setTimeout(function() {\r\n        self.writable = true;\r\n        self.emit(\"drain\");\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called upon close\r\n   *\r\n   * @api private\r\n   */\r\n  onClose() {\r\n    Transport.prototype.onClose.call(this);\r\n  }\r\n\r\n  /**\r\n   * Closes socket.\r\n   *\r\n   * @api private\r\n   */\r\n  doClose() {\r\n    if (typeof this.ws !== \"undefined\") {\r\n      this.ws.close();\r\n      this.ws = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates uri for connection.\r\n   *\r\n   * @api private\r\n   */\r\n  uri() {\r\n    let query = this.query || {};\r\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\r\n    let port = \"\";\r\n\r\n    // avoid port if default for schema\r\n    if (\r\n      this.opts.port &&\r\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\r\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\r\n    ) {\r\n      port = \":\" + this.opts.port;\r\n    }\r\n\r\n    // append timestamp to URI\r\n    if (this.opts.timestampRequests) {\r\n      query[this.opts.timestampParam] = yeast();\r\n    }\r\n\r\n    // communicate binary support capabilities\r\n    if (!this.supportsBinary) {\r\n      query.b64 = 1;\r\n    }\r\n\r\n    query = parseqs.encode(query);\r\n\r\n    // prepend ? to query\r\n    if (query.length) {\r\n      query = \"?\" + query;\r\n    }\r\n\r\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\r\n    return (\r\n      schema +\r\n      \"://\" +\r\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\r\n      port +\r\n      this.opts.path +\r\n      query\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Feature detection for WebSocket.\r\n   *\r\n   * @return {Boolean} whether this transport is available.\r\n   * @api public\r\n   */\r\n  check() {\r\n    return (\r\n      !!WebSocket &&\r\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = WS;\r\n", "const XMLHttpRequest = require(\"xmlhttprequest-ssl\");\r\nconst XHR = require(\"./polling-xhr\");\r\nconst JSONP = require(\"./polling-jsonp\");\r\nconst websocket = require(\"./websocket\");\r\n\r\nexports.polling = polling;\r\nexports.websocket = websocket;\r\n\r\n/**\r\n * Polling transport polymorphic constructor.\r\n * Decides on xhr vs jsonp based on feature detection.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction polling(opts) {\r\n  let xhr;\r\n  let xd = false;\r\n  let xs = false;\r\n  const jsonp = false !== opts.jsonp;\r\n\r\n  if (typeof location !== \"undefined\") {\r\n    const isSSL = \"https:\" === location.protocol;\r\n    let port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    xd = opts.hostname !== location.hostname || port !== opts.port;\r\n    xs = opts.secure !== isSSL;\r\n  }\r\n\r\n  opts.xdomain = xd;\r\n  opts.xscheme = xs;\r\n  xhr = new XMLHttpRequest(opts);\r\n\r\n  if (\"open\" in xhr && !opts.forceJSONP) {\r\n    return new XHR(opts);\r\n  } else {\r\n    if (!jsonp) throw new Error(\"JSONP disabled\");\r\n    return new JSONP(opts);\r\n  }\r\n}\r\n", "const transports = require(\"./transports/index\");\r\nconst Emitter = require(\"component-emitter\");\r\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\r\nconst parser = require(\"engine.io-parser\");\r\nconst parseuri = require(\"parseuri\");\r\nconst parseqs = require(\"parseqs\");\r\n\r\nclass Socket extends Emitter {\r\n  /**\r\n   * Socket constructor.\r\n   *\r\n   * @param {String|Object} uri or options\r\n   * @param {Object} options\r\n   * @api public\r\n   */\r\n  constructor(uri, opts = {}) {\r\n    super();\r\n\r\n    if (uri && \"object\" === typeof uri) {\r\n      opts = uri;\r\n      uri = null;\r\n    }\r\n\r\n    if (uri) {\r\n      uri = parseuri(uri);\r\n      opts.hostname = uri.host;\r\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\r\n      opts.port = uri.port;\r\n      if (uri.query) opts.query = uri.query;\r\n    } else if (opts.host) {\r\n      opts.hostname = parseuri(opts.host).host;\r\n    }\r\n\r\n    this.secure =\r\n      null != opts.secure\r\n        ? opts.secure\r\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\r\n\r\n    if (opts.hostname && !opts.port) {\r\n      // if no port is specified manually, use the protocol default\r\n      opts.port = this.secure ? \"443\" : \"80\";\r\n    }\r\n\r\n    this.hostname =\r\n      opts.hostname ||\r\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\r\n    this.port =\r\n      opts.port ||\r\n      (typeof location !== \"undefined\" && location.port\r\n        ? location.port\r\n        : this.secure\r\n        ? 443\r\n        : 80);\r\n\r\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\r\n    this.readyState = \"\";\r\n    this.writeBuffer = [];\r\n    this.prevBufferLen = 0;\r\n\r\n    this.opts = Object.assign(\r\n      {\r\n        path: \"/engine.io\",\r\n        agent: false,\r\n        withCredentials: false,\r\n        upgrade: true,\r\n        jsonp: true,\r\n        timestampParam: \"t\",\r\n        rememberUpgrade: false,\r\n        rejectUnauthorized: true,\r\n        perMessageDeflate: {\r\n          threshold: 1024\r\n        },\r\n        transportOptions: {}\r\n      },\r\n      opts\r\n    );\r\n\r\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\r\n\r\n    if (typeof this.opts.query === \"string\") {\r\n      this.opts.query = parseqs.decode(this.opts.query);\r\n    }\r\n\r\n    // set on handshake\r\n    this.id = null;\r\n    this.upgrades = null;\r\n    this.pingInterval = null;\r\n    this.pingTimeout = null;\r\n\r\n    // set on heartbeat\r\n    this.pingTimeoutTimer = null;\r\n\r\n    if (typeof addEventListener === \"function\") {\r\n      addEventListener(\r\n        \"beforeunload\",\r\n        () => {\r\n          if (this.transport) {\r\n            // silently close the transport\r\n            this.transport.removeAllListeners();\r\n            this.transport.close();\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n\r\n    this.open();\r\n  }\r\n\r\n  /**\r\n   * Creates transport of the given type.\r\n   *\r\n   * @param {String} transport name\r\n   * @return {Transport}\r\n   * @api private\r\n   */\r\n  createTransport(name) {\r\n    debug('creating transport \"%s\"', name);\r\n    const query = clone(this.opts.query);\r\n\r\n    // append engine.io protocol identifier\r\n    query.EIO = parser.protocol;\r\n\r\n    // transport name\r\n    query.transport = name;\r\n\r\n    // session id if we already have one\r\n    if (this.id) query.sid = this.id;\r\n\r\n    const opts = Object.assign(\r\n      {},\r\n      this.opts.transportOptions[name],\r\n      this.opts,\r\n      {\r\n        query,\r\n        socket: this,\r\n        hostname: this.hostname,\r\n        secure: this.secure,\r\n        port: this.port\r\n      }\r\n    );\r\n\r\n    debug(\"options: %j\", opts);\r\n\r\n    return new transports[name](opts);\r\n  }\r\n\r\n  /**\r\n   * Initializes transport to use and starts probe.\r\n   *\r\n   * @api private\r\n   */\r\n  open() {\r\n    let transport;\r\n    if (\r\n      this.opts.rememberUpgrade &&\r\n      Socket.priorWebsocketSuccess &&\r\n      this.transports.indexOf(\"websocket\") !== -1\r\n    ) {\r\n      transport = \"websocket\";\r\n    } else if (0 === this.transports.length) {\r\n      // Emit error on next tick so it can be listened to\r\n      const self = this;\r\n      setTimeout(function() {\r\n        self.emit(\"error\", \"No transports available\");\r\n      }, 0);\r\n      return;\r\n    } else {\r\n      transport = this.transports[0];\r\n    }\r\n    this.readyState = \"opening\";\r\n\r\n    // Retry with the next transport if the transport is disabled (jsonp: false)\r\n    try {\r\n      transport = this.createTransport(transport);\r\n    } catch (e) {\r\n      debug(\"error while creating transport: %s\", e);\r\n      this.transports.shift();\r\n      this.open();\r\n      return;\r\n    }\r\n\r\n    transport.open();\r\n    this.setTransport(transport);\r\n  }\r\n\r\n  /**\r\n   * Sets the current transport. Disables the existing one (if any).\r\n   *\r\n   * @api private\r\n   */\r\n  setTransport(transport) {\r\n    debug(\"setting transport %s\", transport.name);\r\n    const self = this;\r\n\r\n    if (this.transport) {\r\n      debug(\"clearing existing transport %s\", this.transport.name);\r\n      this.transport.removeAllListeners();\r\n    }\r\n\r\n    // set up transport\r\n    this.transport = transport;\r\n\r\n    // set up transport listeners\r\n    transport\r\n      .on(\"drain\", function() {\r\n        self.onDrain();\r\n      })\r\n      .on(\"packet\", function(packet) {\r\n        self.onPacket(packet);\r\n      })\r\n      .on(\"error\", function(e) {\r\n        self.onError(e);\r\n      })\r\n      .on(\"close\", function() {\r\n        self.onClose(\"transport close\");\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Probes a transport.\r\n   *\r\n   * @param {String} transport name\r\n   * @api private\r\n   */\r\n  probe(name) {\r\n    debug('probing transport \"%s\"', name);\r\n    let transport = this.createTransport(name, { probe: 1 });\r\n    let failed = false;\r\n    const self = this;\r\n\r\n    Socket.priorWebsocketSuccess = false;\r\n\r\n    function onTransportOpen() {\r\n      if (self.onlyBinaryUpgrades) {\r\n        const upgradeLosesBinary =\r\n          !this.supportsBinary && self.transport.supportsBinary;\r\n        failed = failed || upgradeLosesBinary;\r\n      }\r\n      if (failed) return;\r\n\r\n      debug('probe transport \"%s\" opened', name);\r\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\r\n      transport.once(\"packet\", function(msg) {\r\n        if (failed) return;\r\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\r\n          debug('probe transport \"%s\" pong', name);\r\n          self.upgrading = true;\r\n          self.emit(\"upgrading\", transport);\r\n          if (!transport) return;\r\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\r\n\r\n          debug('pausing current transport \"%s\"', self.transport.name);\r\n          self.transport.pause(function() {\r\n            if (failed) return;\r\n            if (\"closed\" === self.readyState) return;\r\n            debug(\"changing transport and sending upgrade packet\");\r\n\r\n            cleanup();\r\n\r\n            self.setTransport(transport);\r\n            transport.send([{ type: \"upgrade\" }]);\r\n            self.emit(\"upgrade\", transport);\r\n            transport = null;\r\n            self.upgrading = false;\r\n            self.flush();\r\n          });\r\n        } else {\r\n          debug('probe transport \"%s\" failed', name);\r\n          const err = new Error(\"probe error\");\r\n          err.transport = transport.name;\r\n          self.emit(\"upgradeError\", err);\r\n        }\r\n      });\r\n    }\r\n\r\n    function freezeTransport() {\r\n      if (failed) return;\r\n\r\n      // Any callback called by transport should be ignored since now\r\n      failed = true;\r\n\r\n      cleanup();\r\n\r\n      transport.close();\r\n      transport = null;\r\n    }\r\n\r\n    // Handle any error that happens while probing\r\n    function onerror(err) {\r\n      const error = new Error(\"probe error: \" + err);\r\n      error.transport = transport.name;\r\n\r\n      freezeTransport();\r\n\r\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\r\n\r\n      self.emit(\"upgradeError\", error);\r\n    }\r\n\r\n    function onTransportClose() {\r\n      onerror(\"transport closed\");\r\n    }\r\n\r\n    // When the socket is closed while we're probing\r\n    function onclose() {\r\n      onerror(\"socket closed\");\r\n    }\r\n\r\n    // When the socket is upgraded while we're probing\r\n    function onupgrade(to) {\r\n      if (transport && to.name !== transport.name) {\r\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\r\n        freezeTransport();\r\n      }\r\n    }\r\n\r\n    // Remove all listeners on the transport and on self\r\n    function cleanup() {\r\n      transport.removeListener(\"open\", onTransportOpen);\r\n      transport.removeListener(\"error\", onerror);\r\n      transport.removeListener(\"close\", onTransportClose);\r\n      self.removeListener(\"close\", onclose);\r\n      self.removeListener(\"upgrading\", onupgrade);\r\n    }\r\n\r\n    transport.once(\"open\", onTransportOpen);\r\n    transport.once(\"error\", onerror);\r\n    transport.once(\"close\", onTransportClose);\r\n\r\n    this.once(\"close\", onclose);\r\n    this.once(\"upgrading\", onupgrade);\r\n\r\n    transport.open();\r\n  }\r\n\r\n  /**\r\n   * Called when connection is deemed open.\r\n   *\r\n   * @api public\r\n   */\r\n  onOpen() {\r\n    debug(\"socket open\");\r\n    this.readyState = \"open\";\r\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\r\n    this.emit(\"open\");\r\n    this.flush();\r\n\r\n    // we check for `readyState` in case an `open`\r\n    // listener already closed the socket\r\n    if (\r\n      \"open\" === this.readyState &&\r\n      this.opts.upgrade &&\r\n      this.transport.pause\r\n    ) {\r\n      debug(\"starting upgrade probes\");\r\n      let i = 0;\r\n      const l = this.upgrades.length;\r\n      for (; i < l; i++) {\r\n        this.probe(this.upgrades[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles a packet.\r\n   *\r\n   * @api private\r\n   */\r\n  onPacket(packet) {\r\n    if (\r\n      \"opening\" === this.readyState ||\r\n      \"open\" === this.readyState ||\r\n      \"closing\" === this.readyState\r\n    ) {\r\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\r\n\r\n      this.emit(\"packet\", packet);\r\n\r\n      // Socket is live - any packet counts\r\n      this.emit(\"heartbeat\");\r\n\r\n      switch (packet.type) {\r\n        case \"open\":\r\n          this.onHandshake(JSON.parse(packet.data));\r\n          break;\r\n\r\n        case \"ping\":\r\n          this.resetPingTimeout();\r\n          this.sendPacket(\"pong\");\r\n          this.emit(\"pong\");\r\n          break;\r\n\r\n        case \"error\":\r\n          const err = new Error(\"server error\");\r\n          err.code = packet.data;\r\n          this.onError(err);\r\n          break;\r\n\r\n        case \"message\":\r\n          this.emit(\"data\", packet.data);\r\n          this.emit(\"message\", packet.data);\r\n          break;\r\n      }\r\n    } else {\r\n      debug('packet received with socket readyState \"%s\"', this.readyState);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called upon handshake completion.\r\n   *\r\n   * @param {Object} handshake obj\r\n   * @api private\r\n   */\r\n  onHandshake(data) {\r\n    this.emit(\"handshake\", data);\r\n    this.id = data.sid;\r\n    this.transport.query.sid = data.sid;\r\n    this.upgrades = this.filterUpgrades(data.upgrades);\r\n    this.pingInterval = data.pingInterval;\r\n    this.pingTimeout = data.pingTimeout;\r\n    this.onOpen();\r\n    // In case open handler closes socket\r\n    if (\"closed\" === this.readyState) return;\r\n    this.resetPingTimeout();\r\n  }\r\n\r\n  /**\r\n   * Sets and resets ping timeout timer based on server pings.\r\n   *\r\n   * @api private\r\n   */\r\n  resetPingTimeout() {\r\n    clearTimeout(this.pingTimeoutTimer);\r\n    this.pingTimeoutTimer = setTimeout(() => {\r\n      this.onClose(\"ping timeout\");\r\n    }, this.pingInterval + this.pingTimeout);\r\n  }\r\n\r\n  /**\r\n   * Called on `drain` event\r\n   *\r\n   * @api private\r\n   */\r\n  onDrain() {\r\n    this.writeBuffer.splice(0, this.prevBufferLen);\r\n\r\n    // setting prevBufferLen = 0 is very important\r\n    // for example, when upgrading, upgrade packet is sent over,\r\n    // and a nonzero prevBufferLen could cause problems on `drain`\r\n    this.prevBufferLen = 0;\r\n\r\n    if (0 === this.writeBuffer.length) {\r\n      this.emit(\"drain\");\r\n    } else {\r\n      this.flush();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Flush write buffers.\r\n   *\r\n   * @api private\r\n   */\r\n  flush() {\r\n    if (\r\n      \"closed\" !== this.readyState &&\r\n      this.transport.writable &&\r\n      !this.upgrading &&\r\n      this.writeBuffer.length\r\n    ) {\r\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\r\n      this.transport.send(this.writeBuffer);\r\n      // keep track of current length of writeBuffer\r\n      // splice writeBuffer and callbackBuffer on `drain`\r\n      this.prevBufferLen = this.writeBuffer.length;\r\n      this.emit(\"flush\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sends a message.\r\n   *\r\n   * @param {String} message.\r\n   * @param {Function} callback function.\r\n   * @param {Object} options.\r\n   * @return {Socket} for chaining.\r\n   * @api public\r\n   */\r\n  write(msg, options, fn) {\r\n    this.sendPacket(\"message\", msg, options, fn);\r\n    return this;\r\n  }\r\n\r\n  send(msg, options, fn) {\r\n    this.sendPacket(\"message\", msg, options, fn);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sends a packet.\r\n   *\r\n   * @param {String} packet type.\r\n   * @param {String} data.\r\n   * @param {Object} options.\r\n   * @param {Function} callback function.\r\n   * @api private\r\n   */\r\n  sendPacket(type, data, options, fn) {\r\n    if (\"function\" === typeof data) {\r\n      fn = data;\r\n      data = undefined;\r\n    }\r\n\r\n    if (\"function\" === typeof options) {\r\n      fn = options;\r\n      options = null;\r\n    }\r\n\r\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\r\n      return;\r\n    }\r\n\r\n    options = options || {};\r\n    options.compress = false !== options.compress;\r\n\r\n    const packet = {\r\n      type: type,\r\n      data: data,\r\n      options: options\r\n    };\r\n    this.emit(\"packetCreate\", packet);\r\n    this.writeBuffer.push(packet);\r\n    if (fn) this.once(\"flush\", fn);\r\n    this.flush();\r\n  }\r\n\r\n  /**\r\n   * Closes the connection.\r\n   *\r\n   * @api private\r\n   */\r\n  close() {\r\n    const self = this;\r\n\r\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n      this.readyState = \"closing\";\r\n\r\n      if (this.writeBuffer.length) {\r\n        this.once(\"drain\", function() {\r\n          if (this.upgrading) {\r\n            waitForUpgrade();\r\n          } else {\r\n            close();\r\n          }\r\n        });\r\n      } else if (this.upgrading) {\r\n        waitForUpgrade();\r\n      } else {\r\n        close();\r\n      }\r\n    }\r\n\r\n    function close() {\r\n      self.onClose(\"forced close\");\r\n      debug(\"socket closing - telling transport to close\");\r\n      self.transport.close();\r\n    }\r\n\r\n    function cleanupAndClose() {\r\n      self.removeListener(\"upgrade\", cleanupAndClose);\r\n      self.removeListener(\"upgradeError\", cleanupAndClose);\r\n      close();\r\n    }\r\n\r\n    function waitForUpgrade() {\r\n      // wait for upgrade to finish since we can't send packets while pausing a transport\r\n      self.once(\"upgrade\", cleanupAndClose);\r\n      self.once(\"upgradeError\", cleanupAndClose);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Called upon transport error\r\n   *\r\n   * @api private\r\n   */\r\n  onError(err) {\r\n    debug(\"socket error %j\", err);\r\n    Socket.priorWebsocketSuccess = false;\r\n    this.emit(\"error\", err);\r\n    this.onClose(\"transport error\", err);\r\n  }\r\n\r\n  /**\r\n   * Called upon transport close.\r\n   *\r\n   * @api private\r\n   */\r\n  onClose(reason, desc) {\r\n    if (\r\n      \"opening\" === this.readyState ||\r\n      \"open\" === this.readyState ||\r\n      \"closing\" === this.readyState\r\n    ) {\r\n      debug('socket close with reason: \"%s\"', reason);\r\n      const self = this;\r\n\r\n      // clear timers\r\n      clearTimeout(this.pingIntervalTimer);\r\n      clearTimeout(this.pingTimeoutTimer);\r\n\r\n      // stop event from firing again for transport\r\n      this.transport.removeAllListeners(\"close\");\r\n\r\n      // ensure transport won't stay open\r\n      this.transport.close();\r\n\r\n      // ignore further transport communication\r\n      this.transport.removeAllListeners();\r\n\r\n      // set ready state\r\n      this.readyState = \"closed\";\r\n\r\n      // clear session id\r\n      this.id = null;\r\n\r\n      // emit close event\r\n      this.emit(\"close\", reason, desc);\r\n\r\n      // clean buffers after, so users can still\r\n      // grab the buffers on `close` event\r\n      self.writeBuffer = [];\r\n      self.prevBufferLen = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filters upgrades, returning only those matching client transports.\r\n   *\r\n   * @param {Array} server upgrades\r\n   * @api private\r\n   *\r\n   */\r\n  filterUpgrades(upgrades) {\r\n    const filteredUpgrades = [];\r\n    let i = 0;\r\n    const j = upgrades.length;\r\n    for (; i < j; i++) {\r\n      if (~this.transports.indexOf(upgrades[i]))\r\n        filteredUpgrades.push(upgrades[i]);\r\n    }\r\n    return filteredUpgrades;\r\n  }\r\n}\r\n\r\nSocket.priorWebsocketSuccess = false;\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.protocol = parser.protocol; // this is an int\r\n\r\nfunction clone(obj) {\r\n  const o = {};\r\n  for (let i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      o[i] = obj[i];\r\n    }\r\n  }\r\n  return o;\r\n}\r\n\r\nmodule.exports = Socket;\r\n", "const Socket = require(\"./socket\");\r\n\r\nmodule.exports = (uri, opts) => new Socket(uri, opts);\r\n\r\n/**\r\n * Expose deps for legacy compatibility\r\n * and standalone browser access.\r\n */\r\n\r\nmodule.exports.Socket = Socket;\r\nmodule.exports.protocol = Socket.protocol; // this is an int\r\nmodule.exports.Transport = require(\"./transport\");\r\nmodule.exports.transports = require(\"./transports/index\");\r\nmodule.exports.parser = require(\"engine.io-parser\");\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.hasBinary = exports.isBinary = void 0;\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\nconst isView = (obj) => {\r\n    return typeof ArrayBuffer.isView === \"function\"\r\n        ? ArrayBuffer.isView(obj)\r\n        : obj.buffer instanceof ArrayBuffer;\r\n};\r\nconst toString = Object.prototype.toString;\r\nconst withNativeBlob = typeof Blob === \"function\" ||\r\n    (typeof Blob !== \"undefined\" &&\r\n        toString.call(Blob) === \"[object BlobConstructor]\");\r\nconst withNativeFile = typeof File === \"function\" ||\r\n    (typeof File !== \"undefined\" &&\r\n        toString.call(File) === \"[object FileConstructor]\");\r\n/**\r\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\r\n *\r\n * @private\r\n */\r\nfunction isBinary(obj) {\r\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\r\n        (withNativeBlob && obj instanceof Blob) ||\r\n        (withNativeFile && obj instanceof File));\r\n}\r\nexports.isBinary = isBinary;\r\nfunction hasBinary(obj, toJSON) {\r\n    if (!obj || typeof obj !== \"object\") {\r\n        return false;\r\n    }\r\n    if (Array.isArray(obj)) {\r\n        for (let i = 0, l = obj.length; i < l; i++) {\r\n            if (hasBinary(obj[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    if (isBinary(obj)) {\r\n        return true;\r\n    }\r\n    if (obj.toJSON &&\r\n        typeof obj.toJSON === \"function\" &&\r\n        arguments.length === 1) {\r\n        return hasBinary(obj.toJSON(), true);\r\n    }\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.hasBinary = hasBinary;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.reconstructPacket = exports.deconstructPacket = void 0;\r\nconst is_binary_1 = require(\"./is-binary\");\r\n/**\r\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\r\n *\r\n * @param {Object} packet - socket.io event packet\r\n * @return {Object} with deconstructed packet and list of buffers\r\n * @public\r\n */\r\nfunction deconstructPacket(packet) {\r\n    const buffers = [];\r\n    const packetData = packet.data;\r\n    const pack = packet;\r\n    pack.data = _deconstructPacket(packetData, buffers);\r\n    pack.attachments = buffers.length; // number of binary 'attachments'\r\n    return { packet: pack, buffers: buffers };\r\n}\r\nexports.deconstructPacket = deconstructPacket;\r\nfunction _deconstructPacket(data, buffers) {\r\n    if (!data)\r\n        return data;\r\n    if (is_binary_1.isBinary(data)) {\r\n        const placeholder = { _placeholder: true, num: buffers.length };\r\n        buffers.push(data);\r\n        return placeholder;\r\n    }\r\n    else if (Array.isArray(data)) {\r\n        const newData = new Array(data.length);\r\n        for (let i = 0; i < data.length; i++) {\r\n            newData[i] = _deconstructPacket(data[i], buffers);\r\n        }\r\n        return newData;\r\n    }\r\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\r\n        const newData = {};\r\n        for (const key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                newData[key] = _deconstructPacket(data[key], buffers);\r\n            }\r\n        }\r\n        return newData;\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Reconstructs a binary packet from its placeholder packet and buffers\r\n *\r\n * @param {Object} packet - event packet with placeholders\r\n * @param {Array} buffers - binary buffers to put in placeholder positions\r\n * @return {Object} reconstructed packet\r\n * @public\r\n */\r\nfunction reconstructPacket(packet, buffers) {\r\n    packet.data = _reconstructPacket(packet.data, buffers);\r\n    packet.attachments = undefined; // no longer useful\r\n    return packet;\r\n}\r\nexports.reconstructPacket = reconstructPacket;\r\nfunction _reconstructPacket(data, buffers) {\r\n    if (!data)\r\n        return data;\r\n    if (data && data._placeholder === true) {\r\n        const isIndexValid = typeof data.num === \"number\" &&\r\n            data.num >= 0 &&\r\n            data.num < buffers.length;\r\n        if (isIndexValid) {\r\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\r\n        }\r\n        else {\r\n            throw new Error(\"illegal attachments\");\r\n        }\r\n    }\r\n    else if (Array.isArray(data)) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            data[i] = _reconstructPacket(data[i], buffers);\r\n        }\r\n    }\r\n    else if (typeof data === \"object\") {\r\n        for (const key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                data[key] = _reconstructPacket(data[key], buffers);\r\n            }\r\n        }\r\n    }\r\n    return data;\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\r\nconst Emitter = require(\"component-emitter\");\r\nconst binary_1 = require(\"./binary\");\r\nconst is_binary_1 = require(\"./is-binary\");\r\nconst debug = require(\"debug\")(\"socket.io-parser\");\r\n/**\r\n * Protocol version.\r\n *\r\n * @public\r\n */\r\nexports.protocol = 5;\r\nvar PacketType;\r\n(function (PacketType) {\r\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\r\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\r\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\r\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\r\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\r\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\r\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\r\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\r\n/**\r\n * A socket.io Encoder instance\r\n */\r\nclass Encoder {\r\n    /**\r\n     * Encode a packet as a single string if non-binary, or as a\r\n     * buffer sequence, depending on packet type.\r\n     *\r\n     * @param {Object} obj - packet object\r\n     */\r\n    encode(obj) {\r\n        debug(\"encoding packet %j\", obj);\r\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\r\n            if (is_binary_1.hasBinary(obj)) {\r\n                obj.type =\r\n                    obj.type === PacketType.EVENT\r\n                        ? PacketType.BINARY_EVENT\r\n                        : PacketType.BINARY_ACK;\r\n                return this.encodeAsBinary(obj);\r\n            }\r\n        }\r\n        return [this.encodeAsString(obj)];\r\n    }\r\n    /**\r\n     * Encode packet as string.\r\n     */\r\n    encodeAsString(obj) {\r\n        // first is type\r\n        let str = \"\" + obj.type;\r\n        // attachments if we have them\r\n        if (obj.type === PacketType.BINARY_EVENT ||\r\n            obj.type === PacketType.BINARY_ACK) {\r\n            str += obj.attachments + \"-\";\r\n        }\r\n        // if we have a namespace other than `/`\r\n        // we append it followed by a comma `,`\r\n        if (obj.nsp && \"/\" !== obj.nsp) {\r\n            str += obj.nsp + \",\";\r\n        }\r\n        // immediately followed by the id\r\n        if (null != obj.id) {\r\n            str += obj.id;\r\n        }\r\n        // json data\r\n        if (null != obj.data) {\r\n            str += JSON.stringify(obj.data);\r\n        }\r\n        debug(\"encoded %j as %s\", obj, str);\r\n        return str;\r\n    }\r\n    /**\r\n     * Encode packet as 'buffer sequence' by removing blobs, and\r\n     * deconstructing packet into object with placeholders and\r\n     * a list of buffers.\r\n     */\r\n    encodeAsBinary(obj) {\r\n        const deconstruction = binary_1.deconstructPacket(obj);\r\n        const pack = this.encodeAsString(deconstruction.packet);\r\n        const buffers = deconstruction.buffers;\r\n        buffers.unshift(pack); // add packet info to beginning of data list\r\n        return buffers; // write all the buffers\r\n    }\r\n}\r\nexports.Encoder = Encoder;\r\n/**\r\n * A socket.io Decoder instance\r\n *\r\n * @return {Object} decoder\r\n */\r\nclass Decoder extends Emitter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Decodes an encoded packet string into packet JSON.\r\n     *\r\n     * @param {String} obj - encoded packet\r\n     */\r\n    add(obj) {\r\n        let packet;\r\n        if (typeof obj === \"string\") {\r\n            if (this.reconstructor) {\r\n                throw new Error(\"got plaintext data when reconstructing a packet\");\r\n            }\r\n            packet = this.decodeString(obj);\r\n            if (packet.type === PacketType.BINARY_EVENT ||\r\n                packet.type === PacketType.BINARY_ACK) {\r\n                // binary packet's json\r\n                this.reconstructor = new BinaryReconstructor(packet);\r\n                // no attachments, labeled binary but no binary data to follow\r\n                if (packet.attachments === 0) {\r\n                    super.emit(\"decoded\", packet);\r\n                }\r\n            }\r\n            else {\r\n                // non-binary full packet\r\n                super.emit(\"decoded\", packet);\r\n            }\r\n        }\r\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\r\n            // raw binary data\r\n            if (!this.reconstructor) {\r\n                throw new Error(\"got binary data when not reconstructing a packet\");\r\n            }\r\n            else {\r\n                packet = this.reconstructor.takeBinaryData(obj);\r\n                if (packet) {\r\n                    // received final buffer\r\n                    this.reconstructor = null;\r\n                    super.emit(\"decoded\", packet);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Unknown type: \" + obj);\r\n        }\r\n    }\r\n    /**\r\n     * Decode a packet String (JSON data)\r\n     *\r\n     * @param {String} str\r\n     * @return {Object} packet\r\n     */\r\n    decodeString(str) {\r\n        let i = 0;\r\n        // look up type\r\n        const p = {\r\n            type: Number(str.charAt(0)),\r\n        };\r\n        if (PacketType[p.type] === undefined) {\r\n            throw new Error(\"unknown packet type \" + p.type);\r\n        }\r\n        // look up attachments if type binary\r\n        if (p.type === PacketType.BINARY_EVENT ||\r\n            p.type === PacketType.BINARY_ACK) {\r\n            const start = i + 1;\r\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\r\n            const buf = str.substring(start, i);\r\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\r\n                throw new Error(\"Illegal attachments\");\r\n            }\r\n            p.attachments = Number(buf);\r\n        }\r\n        // look up namespace (if any)\r\n        if (\"/\" === str.charAt(i + 1)) {\r\n            const start = i + 1;\r\n            while (++i) {\r\n                const c = str.charAt(i);\r\n                if (\",\" === c)\r\n                    break;\r\n                if (i === str.length)\r\n                    break;\r\n            }\r\n            p.nsp = str.substring(start, i);\r\n        }\r\n        else {\r\n            p.nsp = \"/\";\r\n        }\r\n        // look up id\r\n        const next = str.charAt(i + 1);\r\n        if (\"\" !== next && Number(next) == next) {\r\n            const start = i + 1;\r\n            while (++i) {\r\n                const c = str.charAt(i);\r\n                if (null == c || Number(c) != c) {\r\n                    --i;\r\n                    break;\r\n                }\r\n                if (i === str.length)\r\n                    break;\r\n            }\r\n            p.id = Number(str.substring(start, i + 1));\r\n        }\r\n        // look up json data\r\n        if (str.charAt(++i)) {\r\n            const payload = tryParse(str.substr(i));\r\n            if (Decoder.isPayloadValid(p.type, payload)) {\r\n                p.data = payload;\r\n            }\r\n            else {\r\n                throw new Error(\"invalid payload\");\r\n            }\r\n        }\r\n        debug(\"decoded %s as %j\", str, p);\r\n        return p;\r\n    }\r\n    static isPayloadValid(type, payload) {\r\n        switch (type) {\r\n            case PacketType.CONNECT:\r\n                return typeof payload === \"object\";\r\n            case PacketType.DISCONNECT:\r\n                return payload === undefined;\r\n            case PacketType.CONNECT_ERROR:\r\n                return typeof payload === \"string\" || typeof payload === \"object\";\r\n            case PacketType.EVENT:\r\n            case PacketType.BINARY_EVENT:\r\n                return Array.isArray(payload) && payload.length > 0;\r\n            case PacketType.ACK:\r\n            case PacketType.BINARY_ACK:\r\n                return Array.isArray(payload);\r\n        }\r\n    }\r\n    /**\r\n     * Deallocates a parser's resources\r\n     */\r\n    destroy() {\r\n        if (this.reconstructor) {\r\n            this.reconstructor.finishedReconstruction();\r\n        }\r\n    }\r\n}\r\nexports.Decoder = Decoder;\r\nfunction tryParse(str) {\r\n    try {\r\n        return JSON.parse(str);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * A manager of a binary event's 'buffer sequence'. Should\r\n * be constructed whenever a packet of type BINARY_EVENT is\r\n * decoded.\r\n *\r\n * @param {Object} packet\r\n * @return {BinaryReconstructor} initialized reconstructor\r\n */\r\nclass BinaryReconstructor {\r\n    constructor(packet) {\r\n        this.packet = packet;\r\n        this.buffers = [];\r\n        this.reconPack = packet;\r\n    }\r\n    /**\r\n     * Method to be called when binary data received from connection\r\n     * after a BINARY_EVENT packet.\r\n     *\r\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\r\n     * @return {null | Object} returns null if more binary data is expected or\r\n     *   a reconstructed packet object if all buffers have been received.\r\n     */\r\n    takeBinaryData(binData) {\r\n        this.buffers.push(binData);\r\n        if (this.buffers.length === this.reconPack.attachments) {\r\n            // done with buffer list\r\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\r\n            this.finishedReconstruction();\r\n            return packet;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Cleans up binary packet reconstruction variables.\r\n     */\r\n    finishedReconstruction() {\r\n        this.reconPack = null;\r\n        this.buffers = [];\r\n    }\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.on = void 0;\r\nfunction on(obj, ev, fn) {\r\n    obj.on(ev, fn);\r\n    return function subDestroy() {\r\n        obj.off(ev, fn);\r\n    };\r\n}\r\nexports.on = on;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Socket = void 0;\r\nconst socket_io_parser_1 = require(\"socket.io-parser\");\r\nconst Emitter = require(\"component-emitter\");\r\nconst on_1 = require(\"./on\");\r\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\r\n/**\r\n * Internal events.\r\n * These events can't be emitted by the user.\r\n */\r\nconst RESERVED_EVENTS = Object.freeze({\r\n    connect: 1,\r\n    connect_error: 1,\r\n    disconnect: 1,\r\n    disconnecting: 1,\r\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\r\n    newListener: 1,\r\n    removeListener: 1,\r\n});\r\nclass Socket extends Emitter {\r\n    /**\r\n     * `Socket` constructor.\r\n     *\r\n     * @public\r\n     */\r\n    constructor(io, nsp, opts) {\r\n        super();\r\n        this.receiveBuffer = [];\r\n        this.sendBuffer = [];\r\n        this.ids = 0;\r\n        this.acks = {};\r\n        this.flags = {};\r\n        this.io = io;\r\n        this.nsp = nsp;\r\n        this.ids = 0;\r\n        this.acks = {};\r\n        this.receiveBuffer = [];\r\n        this.sendBuffer = [];\r\n        this.connected = false;\r\n        this.disconnected = true;\r\n        this.flags = {};\r\n        if (opts && opts.auth) {\r\n            this.auth = opts.auth;\r\n        }\r\n        if (this.io._autoConnect)\r\n            this.open();\r\n    }\r\n    /**\r\n     * Subscribe to open, close and packet events\r\n     *\r\n     * @private\r\n     */\r\n    subEvents() {\r\n        if (this.subs)\r\n            return;\r\n        const io = this.io;\r\n        this.subs = [\r\n            on_1.on(io, \"open\", this.onopen.bind(this)),\r\n            on_1.on(io, \"packet\", this.onpacket.bind(this)),\r\n            on_1.on(io, \"error\", this.onerror.bind(this)),\r\n            on_1.on(io, \"close\", this.onclose.bind(this)),\r\n        ];\r\n    }\r\n    /**\r\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\r\n     */\r\n    get active() {\r\n        return !!this.subs;\r\n    }\r\n    /**\r\n     * \"Opens\" the socket.\r\n     *\r\n     * @public\r\n     */\r\n    connect() {\r\n        if (this.connected)\r\n            return this;\r\n        this.subEvents();\r\n        if (!this.io[\"_reconnecting\"])\r\n            this.io.open(); // ensure open\r\n        if (\"open\" === this.io._readyState)\r\n            this.onopen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for connect()\r\n     */\r\n    open() {\r\n        return this.connect();\r\n    }\r\n    /**\r\n     * Sends a `message` event.\r\n     *\r\n     * @return self\r\n     * @public\r\n     */\r\n    send(...args) {\r\n        args.unshift(\"message\");\r\n        this.emit.apply(this, args);\r\n        return this;\r\n    }\r\n    /**\r\n     * Override `emit`.\r\n     * If the event is in `events`, it's emitted normally.\r\n     *\r\n     * @param ev - event name\r\n     * @return self\r\n     * @public\r\n     */\r\n    emit(ev, ...args) {\r\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\r\n            throw new Error('\"' + ev + '\" is a reserved event name');\r\n        }\r\n        args.unshift(ev);\r\n        const packet = {\r\n            type: socket_io_parser_1.PacketType.EVENT,\r\n            data: args,\r\n        };\r\n        packet.options = {};\r\n        packet.options.compress = this.flags.compress !== false;\r\n        // event ack callback\r\n        if (\"function\" === typeof args[args.length - 1]) {\r\n            debug(\"emitting packet with ack id %d\", this.ids);\r\n            this.acks[this.ids] = args.pop();\r\n            packet.id = this.ids++;\r\n        }\r\n        const isTransportWritable = this.io.engine &&\r\n            this.io.engine.transport &&\r\n            this.io.engine.transport.writable;\r\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\r\n        if (discardPacket) {\r\n            debug(\"discard packet as the transport is not currently writable\");\r\n        }\r\n        else if (this.connected) {\r\n            this.packet(packet);\r\n        }\r\n        else {\r\n            this.sendBuffer.push(packet);\r\n        }\r\n        this.flags = {};\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends a packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    packet(packet) {\r\n        packet.nsp = this.nsp;\r\n        this.io._packet(packet);\r\n    }\r\n    /**\r\n     * Called upon engine `open`.\r\n     *\r\n     * @private\r\n     */\r\n    onopen() {\r\n        debug(\"transport is open - connecting\");\r\n        if (typeof this.auth == \"function\") {\r\n            this.auth((data) => {\r\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\r\n            });\r\n        }\r\n        else {\r\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\r\n        }\r\n    }\r\n    /**\r\n     * Called upon engine or manager `error`.\r\n     *\r\n     * @param err\r\n     * @private\r\n     */\r\n    onerror(err) {\r\n        if (!this.connected) {\r\n            super.emit(\"connect_error\", err);\r\n        }\r\n    }\r\n    /**\r\n     * Called upon engine `close`.\r\n     *\r\n     * @param reason\r\n     * @private\r\n     */\r\n    onclose(reason) {\r\n        debug(\"close (%s)\", reason);\r\n        this.connected = false;\r\n        this.disconnected = true;\r\n        delete this.id;\r\n        super.emit(\"disconnect\", reason);\r\n    }\r\n    /**\r\n     * Called with socket packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onpacket(packet) {\r\n        const sameNamespace = packet.nsp === this.nsp;\r\n        if (!sameNamespace)\r\n            return;\r\n        switch (packet.type) {\r\n            case socket_io_parser_1.PacketType.CONNECT:\r\n                if (packet.data && packet.data.sid) {\r\n                    const id = packet.data.sid;\r\n                    this.onconnect(id);\r\n                }\r\n                else {\r\n                    super.emit(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\r\n                }\r\n                break;\r\n            case socket_io_parser_1.PacketType.EVENT:\r\n                this.onevent(packet);\r\n                break;\r\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\r\n                this.onevent(packet);\r\n                break;\r\n            case socket_io_parser_1.PacketType.ACK:\r\n                this.onack(packet);\r\n                break;\r\n            case socket_io_parser_1.PacketType.BINARY_ACK:\r\n                this.onack(packet);\r\n                break;\r\n            case socket_io_parser_1.PacketType.DISCONNECT:\r\n                this.ondisconnect();\r\n                break;\r\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\r\n                const err = new Error(packet.data.message);\r\n                // @ts-ignore\r\n                err.data = packet.data.data;\r\n                super.emit(\"connect_error\", err);\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon a server event.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onevent(packet) {\r\n        const args = packet.data || [];\r\n        debug(\"emitting event %j\", args);\r\n        if (null != packet.id) {\r\n            debug(\"attaching ack callback to event\");\r\n            args.push(this.ack(packet.id));\r\n        }\r\n        if (this.connected) {\r\n            this.emitEvent(args);\r\n        }\r\n        else {\r\n            this.receiveBuffer.push(Object.freeze(args));\r\n        }\r\n    }\r\n    emitEvent(args) {\r\n        if (this._anyListeners && this._anyListeners.length) {\r\n            const listeners = this._anyListeners.slice();\r\n            for (const listener of listeners) {\r\n                listener.apply(this, args);\r\n            }\r\n        }\r\n        super.emit.apply(this, args);\r\n    }\r\n    /**\r\n     * Produces an ack callback to emit with an event.\r\n     *\r\n     * @private\r\n     */\r\n    ack(id) {\r\n        const self = this;\r\n        let sent = false;\r\n        return function (...args) {\r\n            // prevent double callbacks\r\n            if (sent)\r\n                return;\r\n            sent = true;\r\n            debug(\"sending ack %j\", args);\r\n            self.packet({\r\n                type: socket_io_parser_1.PacketType.ACK,\r\n                id: id,\r\n                data: args,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Called upon a server acknowlegement.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onack(packet) {\r\n        const ack = this.acks[packet.id];\r\n        if (\"function\" === typeof ack) {\r\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\r\n            ack.apply(this, packet.data);\r\n            delete this.acks[packet.id];\r\n        }\r\n        else {\r\n            debug(\"bad ack %s\", packet.id);\r\n        }\r\n    }\r\n    /**\r\n     * Called upon server connect.\r\n     *\r\n     * @private\r\n     */\r\n    onconnect(id) {\r\n        debug(\"socket connected with id %s\", id);\r\n        this.id = id;\r\n        this.connected = true;\r\n        this.disconnected = false;\r\n        super.emit(\"connect\");\r\n        this.emitBuffered();\r\n    }\r\n    /**\r\n     * Emit buffered events (received and emitted).\r\n     *\r\n     * @private\r\n     */\r\n    emitBuffered() {\r\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\r\n        this.receiveBuffer = [];\r\n        this.sendBuffer.forEach((packet) => this.packet(packet));\r\n        this.sendBuffer = [];\r\n    }\r\n    /**\r\n     * Called upon server disconnect.\r\n     *\r\n     * @private\r\n     */\r\n    ondisconnect() {\r\n        debug(\"server disconnect (%s)\", this.nsp);\r\n        this.destroy();\r\n        this.onclose(\"io server disconnect\");\r\n    }\r\n    /**\r\n     * Called upon forced client/server side disconnections,\r\n     * this method ensures the manager stops tracking us and\r\n     * that reconnections don't get triggered for this.\r\n     *\r\n     * @private\r\n     */\r\n    destroy() {\r\n        if (this.subs) {\r\n            // clean subscriptions to avoid reconnections\r\n            this.subs.forEach((subDestroy) => subDestroy());\r\n            this.subs = undefined;\r\n        }\r\n        this.io[\"_destroy\"](this);\r\n    }\r\n    /**\r\n     * Disconnects the socket manually.\r\n     *\r\n     * @return self\r\n     * @public\r\n     */\r\n    disconnect() {\r\n        if (this.connected) {\r\n            debug(\"performing disconnect (%s)\", this.nsp);\r\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\r\n        }\r\n        // remove socket from pool\r\n        this.destroy();\r\n        if (this.connected) {\r\n            // fire events\r\n            this.onclose(\"io client disconnect\");\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for disconnect()\r\n     *\r\n     * @return self\r\n     * @public\r\n     */\r\n    close() {\r\n        return this.disconnect();\r\n    }\r\n    /**\r\n     * Sets the compress flag.\r\n     *\r\n     * @param compress - if `true`, compresses the sending data\r\n     * @return self\r\n     * @public\r\n     */\r\n    compress(compress) {\r\n        this.flags.compress = compress;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\r\n     * ready to send messages.\r\n     *\r\n     * @returns self\r\n     * @public\r\n     */\r\n    get volatile() {\r\n        this.flags.volatile = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback.\r\n     *\r\n     * @param listener\r\n     * @public\r\n     */\r\n    onAny(listener) {\r\n        this._anyListeners = this._anyListeners || [];\r\n        this._anyListeners.push(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback. The listener is added to the beginning of the listeners array.\r\n     *\r\n     * @param listener\r\n     * @public\r\n     */\r\n    prependAny(listener) {\r\n        this._anyListeners = this._anyListeners || [];\r\n        this._anyListeners.unshift(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the listener that will be fired when any event is emitted.\r\n     *\r\n     * @param listener\r\n     * @public\r\n     */\r\n    offAny(listener) {\r\n        if (!this._anyListeners) {\r\n            return this;\r\n        }\r\n        if (listener) {\r\n            const listeners = this._anyListeners;\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                if (listener === listeners[i]) {\r\n                    listeners.splice(i, 1);\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._anyListeners = [];\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\r\n     * e.g. to remove listeners.\r\n     *\r\n     * @public\r\n     */\r\n    listenersAny() {\r\n        return this._anyListeners || [];\r\n    }\r\n}\r\nexports.Socket = Socket;\r\n", "\r\n/**\r\n * Expose `Backoff`.\r\n */\r\n\r\nmodule.exports = Backoff;\r\n\r\n/**\r\n * Initialize backoff timer with `opts`.\r\n *\r\n * - `min` initial timeout in milliseconds [100]\r\n * - `max` max timeout [10000]\r\n * - `jitter` [0]\r\n * - `factor` [2]\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction Backoff(opts) {\r\n  opts = opts || {};\r\n  this.ms = opts.min || 100;\r\n  this.max = opts.max || 10000;\r\n  this.factor = opts.factor || 2;\r\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\r\n  this.attempts = 0;\r\n}\r\n\r\n/**\r\n * Return the backoff duration.\r\n *\r\n * @return {Number}\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.duration = function(){\r\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\r\n  if (this.jitter) {\r\n    var rand =  Math.random();\r\n    var deviation = Math.floor(rand * this.jitter * ms);\r\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\r\n  }\r\n  return Math.min(ms, this.max) | 0;\r\n};\r\n\r\n/**\r\n * Reset the number of attempts.\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.reset = function(){\r\n  this.attempts = 0;\r\n};\r\n\r\n/**\r\n * Set the minimum duration\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setMin = function(min){\r\n  this.ms = min;\r\n};\r\n\r\n/**\r\n * Set the maximum duration\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setMax = function(max){\r\n  this.max = max;\r\n};\r\n\r\n/**\r\n * Set the jitter\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setJitter = function(jitter){\r\n  this.jitter = jitter;\r\n};\r\n\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Manager = void 0;\r\nconst eio = require(\"engine.io-client\");\r\nconst socket_1 = require(\"./socket\");\r\nconst Emitter = require(\"component-emitter\");\r\nconst parser = require(\"socket.io-parser\");\r\nconst on_1 = require(\"./on\");\r\nconst Backoff = require(\"backo2\");\r\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\r\nclass Manager extends Emitter {\r\n    constructor(uri, opts) {\r\n        super();\r\n        this.nsps = {};\r\n        this.subs = [];\r\n        if (uri && \"object\" === typeof uri) {\r\n            opts = uri;\r\n            uri = undefined;\r\n        }\r\n        opts = opts || {};\r\n        opts.path = opts.path || \"/socket.io\";\r\n        this.opts = opts;\r\n        this.reconnection(opts.reconnection !== false);\r\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\r\n        this.backoff = new Backoff({\r\n            min: this.reconnectionDelay(),\r\n            max: this.reconnectionDelayMax(),\r\n            jitter: this.randomizationFactor(),\r\n        });\r\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n        this._readyState = \"closed\";\r\n        this.uri = uri;\r\n        const _parser = opts.parser || parser;\r\n        this.encoder = new _parser.Encoder();\r\n        this.decoder = new _parser.Decoder();\r\n        this._autoConnect = opts.autoConnect !== false;\r\n        if (this._autoConnect)\r\n            this.open();\r\n    }\r\n    reconnection(v) {\r\n        if (!arguments.length)\r\n            return this._reconnection;\r\n        this._reconnection = !!v;\r\n        return this;\r\n    }\r\n    reconnectionAttempts(v) {\r\n        if (v === undefined)\r\n            return this._reconnectionAttempts;\r\n        this._reconnectionAttempts = v;\r\n        return this;\r\n    }\r\n    reconnectionDelay(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._reconnectionDelay;\r\n        this._reconnectionDelay = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\r\n        return this;\r\n    }\r\n    randomizationFactor(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._randomizationFactor;\r\n        this._randomizationFactor = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\r\n        return this;\r\n    }\r\n    reconnectionDelayMax(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._reconnectionDelayMax;\r\n        this._reconnectionDelayMax = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\r\n        return this;\r\n    }\r\n    timeout(v) {\r\n        if (!arguments.length)\r\n            return this._timeout;\r\n        this._timeout = v;\r\n        return this;\r\n    }\r\n    /**\r\n     * Starts trying to reconnect if reconnection is enabled and we have not\r\n     * started reconnecting yet\r\n     *\r\n     * @private\r\n     */\r\n    maybeReconnectOnOpen() {\r\n        // Only try to reconnect if it's the first time we're connecting\r\n        if (!this._reconnecting &&\r\n            this._reconnection &&\r\n            this.backoff.attempts === 0) {\r\n            // keeps reconnection from firing twice for the same reconnection loop\r\n            this.reconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Sets the current transport `socket`.\r\n     *\r\n     * @param {Function} fn - optional, callback\r\n     * @return self\r\n     * @public\r\n     */\r\n    open(fn) {\r\n        debug(\"readyState %s\", this._readyState);\r\n        if (~this._readyState.indexOf(\"open\"))\r\n            return this;\r\n        debug(\"opening %s\", this.uri);\r\n        this.engine = eio(this.uri, this.opts);\r\n        const socket = this.engine;\r\n        const self = this;\r\n        this._readyState = \"opening\";\r\n        this.skipReconnect = false;\r\n        // emit `open`\r\n        const openSubDestroy = on_1.on(socket, \"open\", function () {\r\n            self.onopen();\r\n            fn && fn();\r\n        });\r\n        // emit `error`\r\n        const errorSub = on_1.on(socket, \"error\", (err) => {\r\n            debug(\"error\");\r\n            self.cleanup();\r\n            self._readyState = \"closed\";\r\n            super.emit(\"error\", err);\r\n            if (fn) {\r\n                fn(err);\r\n            }\r\n            else {\r\n                // Only do this if there is no fn to handle the error\r\n                self.maybeReconnectOnOpen();\r\n            }\r\n        });\r\n        if (false !== this._timeout) {\r\n            const timeout = this._timeout;\r\n            debug(\"connect attempt will timeout after %d\", timeout);\r\n            if (timeout === 0) {\r\n                openSubDestroy(); // prevents a race condition with the 'open' event\r\n            }\r\n            // set timer\r\n            const timer = setTimeout(() => {\r\n                debug(\"connect attempt timed out after %d\", timeout);\r\n                openSubDestroy();\r\n                socket.close();\r\n                socket.emit(\"error\", new Error(\"timeout\"));\r\n            }, timeout);\r\n            this.subs.push(function subDestroy() {\r\n                clearTimeout(timer);\r\n            });\r\n        }\r\n        this.subs.push(openSubDestroy);\r\n        this.subs.push(errorSub);\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for open()\r\n     *\r\n     * @return self\r\n     * @public\r\n     */\r\n    connect(fn) {\r\n        return this.open(fn);\r\n    }\r\n    /**\r\n     * Called upon transport open.\r\n     *\r\n     * @private\r\n     */\r\n    onopen() {\r\n        debug(\"open\");\r\n        // clear old subs\r\n        this.cleanup();\r\n        // mark as open\r\n        this._readyState = \"open\";\r\n        super.emit(\"open\");\r\n        // add new subs\r\n        const socket = this.engine;\r\n        this.subs.push(on_1.on(socket, \"ping\", this.onping.bind(this)), on_1.on(socket, \"data\", this.ondata.bind(this)), on_1.on(socket, \"error\", this.onerror.bind(this)), on_1.on(socket, \"close\", this.onclose.bind(this)), on_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\r\n    }\r\n    /**\r\n     * Called upon a ping.\r\n     *\r\n     * @private\r\n     */\r\n    onping() {\r\n        super.emit(\"ping\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @private\r\n     */\r\n    ondata(data) {\r\n        this.decoder.add(data);\r\n    }\r\n    /**\r\n     * Called when parser fully decodes a packet.\r\n     *\r\n     * @private\r\n     */\r\n    ondecoded(packet) {\r\n        super.emit(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon socket error.\r\n     *\r\n     * @private\r\n     */\r\n    onerror(err) {\r\n        debug(\"error\", err);\r\n        super.emit(\"error\", err);\r\n    }\r\n    /**\r\n     * Creates a new socket for the given `nsp`.\r\n     *\r\n     * @return {Socket}\r\n     * @public\r\n     */\r\n    socket(nsp, opts) {\r\n        let socket = this.nsps[nsp];\r\n        if (!socket) {\r\n            socket = new socket_1.Socket(this, nsp, opts);\r\n            this.nsps[nsp] = socket;\r\n        }\r\n        return socket;\r\n    }\r\n    /**\r\n     * Called upon a socket close.\r\n     *\r\n     * @param socket\r\n     * @private\r\n     */\r\n    _destroy(socket) {\r\n        const nsps = Object.keys(this.nsps);\r\n        for (const nsp of nsps) {\r\n            const socket = this.nsps[nsp];\r\n            if (socket.active) {\r\n                debug(\"socket %s is still active, skipping close\", nsp);\r\n                return;\r\n            }\r\n        }\r\n        this._close();\r\n    }\r\n    /**\r\n     * Writes a packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    _packet(packet) {\r\n        debug(\"writing packet %j\", packet);\r\n        if (packet.query && packet.type === 0)\r\n            packet.nsp += \"?\" + packet.query;\r\n        const encodedPackets = this.encoder.encode(packet);\r\n        for (let i = 0; i < encodedPackets.length; i++) {\r\n            this.engine.write(encodedPackets[i], packet.options);\r\n        }\r\n    }\r\n    /**\r\n     * Clean up transport subscriptions and packet buffer.\r\n     *\r\n     * @private\r\n     */\r\n    cleanup() {\r\n        debug(\"cleanup\");\r\n        this.subs.forEach((subDestroy) => subDestroy());\r\n        this.subs.length = 0;\r\n        this.decoder.destroy();\r\n    }\r\n    /**\r\n     * Close the current socket.\r\n     *\r\n     * @private\r\n     */\r\n    _close() {\r\n        debug(\"disconnect\");\r\n        this.skipReconnect = true;\r\n        this._reconnecting = false;\r\n        if (\"opening\" === this._readyState) {\r\n            // `onclose` will not fire because\r\n            // an open event never happened\r\n            this.cleanup();\r\n        }\r\n        this.backoff.reset();\r\n        this._readyState = \"closed\";\r\n        if (this.engine)\r\n            this.engine.close();\r\n    }\r\n    /**\r\n     * Alias for close()\r\n     *\r\n     * @private\r\n     */\r\n    disconnect() {\r\n        return this._close();\r\n    }\r\n    /**\r\n     * Called upon engine close.\r\n     *\r\n     * @private\r\n     */\r\n    onclose(reason) {\r\n        debug(\"onclose\");\r\n        this.cleanup();\r\n        this.backoff.reset();\r\n        this._readyState = \"closed\";\r\n        super.emit(\"close\", reason);\r\n        if (this._reconnection && !this.skipReconnect) {\r\n            this.reconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Attempt a reconnection.\r\n     *\r\n     * @private\r\n     */\r\n    reconnect() {\r\n        if (this._reconnecting || this.skipReconnect)\r\n            return this;\r\n        const self = this;\r\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n            debug(\"reconnect failed\");\r\n            this.backoff.reset();\r\n            super.emit(\"reconnect_failed\");\r\n            this._reconnecting = false;\r\n        }\r\n        else {\r\n            const delay = this.backoff.duration();\r\n            debug(\"will wait %dms before reconnect attempt\", delay);\r\n            this._reconnecting = true;\r\n            const timer = setTimeout(() => {\r\n                if (self.skipReconnect)\r\n                    return;\r\n                debug(\"attempting reconnect\");\r\n                super.emit(\"reconnect_attempt\", self.backoff.attempts);\r\n                // check again for the case socket closed in above events\r\n                if (self.skipReconnect)\r\n                    return;\r\n                self.open((err) => {\r\n                    if (err) {\r\n                        debug(\"reconnect attempt error\");\r\n                        self._reconnecting = false;\r\n                        self.reconnect();\r\n                        super.emit(\"reconnect_error\", err);\r\n                    }\r\n                    else {\r\n                        debug(\"reconnect success\");\r\n                        self.onreconnect();\r\n                    }\r\n                });\r\n            }, delay);\r\n            this.subs.push(function subDestroy() {\r\n                clearTimeout(timer);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Called upon successful reconnect.\r\n     *\r\n     * @private\r\n     */\r\n    onreconnect() {\r\n        const attempt = this.backoff.attempts;\r\n        this._reconnecting = false;\r\n        this.backoff.reset();\r\n        super.emit(\"reconnect\", attempt);\r\n    }\r\n}\r\nexports.Manager = Manager;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Socket = exports.io = exports.Manager = exports.protocol = void 0;\r\nconst url_1 = require(\"./url\");\r\nconst manager_1 = require(\"./manager\");\r\nconst socket_1 = require(\"./socket\");\r\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\r\nconst debug = require(\"debug\")(\"socket.io-client\");\r\n/**\r\n * Module exports.\r\n */\r\nmodule.exports = exports = lookup;\r\n/**\r\n * Managers cache.\r\n */\r\nconst cache = (exports.managers = {});\r\nfunction lookup(uri, opts) {\r\n    if (typeof uri === \"object\") {\r\n        opts = uri;\r\n        uri = undefined;\r\n    }\r\n    opts = opts || {};\r\n    const parsed = url_1.url(uri);\r\n    const source = parsed.source;\r\n    const id = parsed.id;\r\n    const path = parsed.path;\r\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\r\n    const newConnection = opts.forceNew ||\r\n        opts[\"force new connection\"] ||\r\n        false === opts.multiplex ||\r\n        sameNamespace;\r\n    let io;\r\n    if (newConnection) {\r\n        debug(\"ignoring socket cache for %s\", source);\r\n        io = new manager_1.Manager(source, opts);\r\n    }\r\n    else {\r\n        if (!cache[id]) {\r\n            debug(\"new io instance for %s\", source);\r\n            cache[id] = new manager_1.Manager(source, opts);\r\n        }\r\n        io = cache[id];\r\n    }\r\n    if (parsed.query && !opts.query) {\r\n        opts.query = parsed.query;\r\n    }\r\n    return io.socket(parsed.path, opts);\r\n}\r\nexports.io = lookup;\r\n/**\r\n * Protocol version.\r\n *\r\n * @public\r\n */\r\nvar socket_io_parser_1 = require(\"socket.io-parser\");\r\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\r\n/**\r\n * `connect`.\r\n *\r\n * @param {String} uri\r\n * @public\r\n */\r\nexports.connect = lookup;\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @public\r\n */\r\nvar manager_2 = require(\"./manager\");\r\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\r\n", "import io from \"./build/index.js\";\r\n\r\nexport const Manager = io.Manager;\r\nexport { io };\r\nexport default io;\r\n"],
  "mappings": "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",
  "names": ["self", "self", "XMLHttpRequest", "self", "self", "self", "XMLHttpRequest", "self", "require_lib", "PacketType", "require_socket", "io", "self", "Manager", "self", "socket", "io", "io", "io"]
}
